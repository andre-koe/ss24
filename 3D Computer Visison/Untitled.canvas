{
	"nodes":[
		{"id":"e518224dbd268545","type":"text","text":"3D Computer Vision","x":-160,"y":-120,"width":250,"height":60},
		{"id":"a74a3e436ad7b132","type":"text","text":"##### Unterschied zwischen Stereo Vision (oben) und triangulations basiertes Laser Scanning (unten)\n\n![[Pasted image 20240609153927.png]]\n\n\n![[Pasted image 20240609153945.png]]","x":6920,"y":5098,"width":693,"height":1076},
		{"id":"ef633807dd7e7188","type":"text","text":"##### Optische Triangulation\n\n**Setup**\n- Mindestens eine Kamera\n- Projektor, bspw. Laser Pointer, Laser Line, strukturiertes Licht, Lichtpunkte, Muster, etc.\n- Kamera in $O_1$ und Projektor un $O_2$ haben eine fixe relative Position (bsp. Abstand $b$)\n\n![[Pasted image 20240609161154.png]]\n\n**Eigenschaften**\n- Kamerabild des Laserpunkts oder Musters hängt von der Geometrie des 3D Zielobjekts ab.\n- Das Kamerabild des Laserpunkts oder Musters ändert sich mit der geometrie","x":8053,"y":5094,"width":418,"height":720},
		{"id":"483180eed1a3f7db","type":"text","text":"**(Allgemeine Räumliche Rekonstruktion)**\n\nDie räumliche Rekonstruktion aus allgemeinen Spektrogrammen wird als *Räumlicher Vorwärtsschritt* bezeichnet\n\n- Die Halbbilder müssen sich im Zielpunkt $p = (x,y,z)^t$ überlappen.\n  \n  $x = x_0 + (z-z_0) \\frac{r_{11}(x'-x_0')+r_{12}(y'-y_0')-r_{13}f}{r_{31}(x'-x_0') + r_{32}(y'-y_0')-r_{33}f} = x_0 + (z-z_0)\\cdot k_x (x', y')$\n  \n  $y = y_0 + (z-z_0)\\frac{r_{21}(x'-x_0')+r_{22}(y'-y'_0)-r_{23}f}{r_{31}(x'-x'_0)+r_{32}(y'-y_0')-r_{33}f} = y_{0}+(z-z_0)\\cdot k_y(x',y')$\n\nDaraus resultieren 4 Gleichungen (in zwei Bildern) für 3 unbekannte\n=> Mögliche Lösung:\n\t- Ignorieren der dritten/vierten Gleichung und Lösen jedes Systems nach $z$, anschließend durchschnitt der beiden gefundenen Lösungen bilden.\n\t\t- Relativ ungenau, ungenauigkeit nimmt mit der Abweichung vom Normalfall zu\n\t- Nichtlineare Regression\n\t\t- Zeitaufwendige Berechnung der korrespondierenden Bildpunkte (epi-polar geometry)\n","x":8693,"y":5133,"width":609,"height":597},
		{"id":"ab1d39b5cea0a446","type":"text","text":"##### Räumlicher Vorwärtsschritt\n\nDie allg. räumliche Rekonstruktion, gegeben durch:\n\n$$x = x_0 + (z-z_0)\\frac{r_{11}(x'-x'_0)+r_{12}(y'-y_0')-r_{13}f}{r_{31}(x'-x'_0)+r_{32}(y'-y_0')-r_{33}f}$$\n$$y = y_0 + (z-z_0)\\frac{r_{21}(x'-x'_0)+r_{22}(y'-y'_0)-r_{23}f}{r_{31}(x'-x'_0)+r_{32}(y'-y_0')-r_{33}f}$$\n\nVereinfacht sich im Normalfall zu:\n\nlinkes Bild: $x = -z\\frac{x'_1}{f},\\quad y=-z\\frac{y_1'}{f}$\nrechtes Bild: $x = b-z\\frac{x'_2}{f},\\quad y=-z\\frac{y_2'}{f}$\n\nDer Raumpunkt $P = (x,y,z)^t$ korrespondiert mit den zwei Bildpunkten $P_i'=(x_i', y_i'),\\ i = 1,2$ mit den selben $y'$ Koordinaten\n- Es gibt keine $y'$-Parallaxe\n- Es gibt nur eine $x'$-Parallaxe $p_{x'} = x_1'-x_2'$\n\n","x":9225,"y":4433,"width":420,"height":560},
		{"id":"d39205fcf402a982","type":"text","text":"Die Korrespondenz des Bildes eines Punktes im linken *Halbbild* ist in der selben Zeile im rechten *Halbbild*.\n\nDas vereinfacht die Suche nach Korrespondenzen.\n\nGleichsetzen der $x$-Koordinaten beider Bilder liefert:\n$$-z\\frac{x'_1}{f} = b-z\\frac{x'_2}{f}$$\n\nund damit:\n\n$z = -f\\frac{b}{x_1'-x_2'} = -f\\frac{b}{p_x'}$ ($p_{x'}$ ist Parallaxe)\n$y = -z\\frac{y'_1}{f} = -z\\frac{y_2'}{f}$ (Kontrolle)\n$x = -z\\frac{x'_1}{f}$\n\n=> Je größer die Parallaxe, desto näher ist der Punkt an der Kamera\n","x":9585,"y":5133,"width":620,"height":420},
		{"id":"e1fc014ff0245766","type":"text","text":"##### Berechnung der Distanz\n\nDie Distanz zum Objektpunkt $P$ wird trogonometrisch mittels Triangulation bestimmt:\n\n$$z = ||P-O_1||\\cdot \\sin\\varphi_1=b\\cdot\\frac{\\sin\\varphi_1\\cdot\\sin\\varphi_2}{\\sin(\\pi--\\varphi_1 -\\varphi_2)}$$\nmit $\\pi = \\varphi_1+\\varphi_2+\\varphi_3$\n\n![[Pasted image 20240609161702.png]]\n\n**Achtung**: Wie bei der Stereo Vision ist auch hier wieder eine exakte Kalibrierung für ein ausreichend genaues Ergebnis unerlässlich","x":7799,"y":5984,"width":534,"height":630},
		{"id":"58fdace7e7abafad","type":"text","text":"##### Grundlagen\n\nDie Stereoskopische Sicht und Tiefenwahrnehmung basiert auf der Diskrepanz zweier Bilder aus unterschiedlichen Perspektiven und der daraus resultierenden Parallaxe. (Vgl. Menschliches Auge)\n\n**Parallaxe**: Änderung der Position eines Objekt, wenn aus zwei unterschiedlichen Perspektiven betrachtet wird.\n- Unterschiedliche Bildkoordinaten aus identischen Weltkoordinaten eines Objekts\n- Unterschiedliche Kamerakoordinaten aus identischen Weltkoordinaten eines Objekts\n\nZusammen ergeben beide *Halbbilder* ein *Stereogramm*\n\nWichtig für die Rekonstruktion sind die Informationen über die relative Position und Orientierung beider Kameras\n\n- Die extrinsichen Kameraparameter unterscheiden sich in Kamerarichtung, Orientierung und dem Center of Projection\n- Die intrinischen Kameraparamter sind typischerweise identisch für beide Kameras, (focal length bzw. Brennweite und Image Principle Point).\n\nDie Stereoskopische Geometrie unterscheidet zwei Fälle:\n- Parallele Kameraachsen (Normalfall)\n- Konvergierende bzw. Divergierende Kameraachsen","x":7753,"y":2193,"width":740,"height":621},
		{"id":"1a6e0779c332c94a","type":"text","text":"##### 2D Stereo Vision\n\nTechnik zur 3D Rekonstruktion mithilfe zweier (parallel ausgerichteter Kameras).\n\nDie Rekonstruktion wird aus der Parallaxe der einzelnen Perspektiven der jeweiligen Kameras berechnet.\n\n\n","x":8525,"y":1739,"width":508,"height":195},
		{"id":"0b24fb528c1bb046","type":"text","text":"##### Nenne verschiedene 3D Datenerfassungsverfahren und Klassifiziere sie auf Basis der Taxonomie","x":9291,"y":2214,"width":444,"height":230},
		{"id":"164913fde9454aa3","type":"text","text":"##### Was sind Diskrepanzen und Parallaxen?","x":9333,"y":1672,"width":250,"height":230},
		{"id":"f0f4c552dbbe3c02","type":"text","text":"##### Wie lauten die Rekonstruktionsgleichungen im Normalfall der der Stereovision?","x":9963,"y":1989,"width":348,"height":225},
		{"id":"00d8bcee224d4edb","type":"text","text":"### Fragen\n","x":10186,"y":1612,"width":250,"height":60},
		{"id":"7d419d4db4b2634c","type":"text","text":"##### Wie funktioniert optische Triangulation?","x":10373,"y":1989,"width":360,"height":225},
		{"id":"98859240b38018e3","type":"text","text":"##### Wie läuft die Fehlerfortpflanzung im Normalfall der Stereovision ab?","x":10816,"y":1989,"width":320,"height":225},
		{"id":"ac33c07d9e42bf5b","type":"text","text":"##### Was ist der Normalfall der Stereovision?","x":10874,"y":1387,"width":262,"height":225},
		{"id":"a15257c7c56f30f0","type":"text","text":"##### Erläutere das ToF-Prinzip","x":11136,"y":1837,"width":250,"height":96},
		{"id":"44086213b530dbe1","type":"text","text":"##### Gauss'sche Fehlerfortpflanzung\n\nDie Abweichung $\\sigma_v$ einer Größe $v=F(u_1, \\dots, u_n)$, berechnet aus aus den fehlerhaften Parametern $u_1,\\dots, u_n$ wird durch \n\n$$\\begin{align}\\sigma_v^2&=\\sum_{i=1}^n\\left(\\frac{\\partial F}{\\partial u_{i}}\\bigg|_{u_1,\\dots,u_n}\\cdot \\sigma_{u_i}\\right)^2\\\\ &=\\left(\\frac{\\partial F}{\\partial u_{1}}\\bigg|_{u_1,\\dots,u_n}\\cdot \\sigma_{u_1}\\right)^2 + \\left(\\frac{\\partial F}{\\partial u_{2}}\\bigg|_{u_1,\\dots,u_n}\\cdot \\sigma_{u_2}\\right)^2+\\dots+\\left(\\frac{\\partial F}{\\partial u_{n}}\\bigg|_{u_1,\\dots,u_n}\\cdot \\sigma_{u_n}\\right)^2\\end{align}$$\n\nAnmerkung: Die Approximation eignet sich nur für kleine Fehler","x":10205,"y":4793,"width":660,"height":300},
		{"id":"de06d70d38f9946a","type":"text","text":"##### Fehleranalyse\n\nIn der Stereorekonstruktion werden die räumlichen Positionen indirekt aus den 2d-Bildpositionen $x_1', y_1'$ und der Parallaxe $p_x'$\n\nFehler in der 2d-Bildpositionen können Fehler in der Rekonstruktion verursachen.","x":10255,"y":4433,"width":560,"height":210},
		{"id":"c4f74c0d9bb860d8","type":"text","text":"Die Genauigkeit einer räumlichen Rekonstruktion wird durch zwei Größen bestimmt:\n\n- Die *base ratio* $m_V = \\frac{b}{z}$\n- Die *image scale* $m_B = \\frac{z}{f}$\n\n=> $\\sigma_z = \\frac{z\\cdot z}{f\\cdot b} \\sigma_{p_{x'}} = \\frac{m_B}{m_V}\\sigma_{p_{x'}}$\n\n=> $\\sigma_y = \\sqrt{\\left(\\frac{y'_1}{f}\\frac{m_B}{m_V}\\sigma_{p_{x'}}\\right)^2 + (m_B\\cdot \\sigma_{y'})^2}$\n\n=> $\\sigma_x = \\sqrt{\\left(\\frac{x'_1}{f}\\frac{m_B}{m_V}\\sigma_{p_{x'}}\\right)^2+(m_B\\sigma_{x'})^2}$\n\n\n","x":10255,"y":5873,"width":560,"height":340},
		{"id":"bb772d7982d9dc4e","type":"text","text":"**Annahme:** Base length $b$ und Principal distance $f$ sind exakt\n\nWende Fehlerfortpflanzung auf:\n$z = -\\frac{f\\cdot b}{p_{x'}},\\quad y=-z\\frac{y_1'}{f},\\quad x = -z\\frac{x'_1}{f}$ an\n\n$\\sigma_z^2=\\left(\\frac{\\partial z}{\\partial p_{x'}}\\bigg|_{p_{x'}}\\cdot \\sigma_{p_{x'}}\\right)^2 = \\left(\\frac{f\\cdot b}{p_{x'}^2}\\right)\\cdot \\sigma_{p_{x'}^2}$\n=> $\\sigma_z = \\frac{z^2}{f\\cdot b}\\sigma_{p_{x'}}$\n\n$\\sigma_y^2 = \\left(\\frac{\\partial y}{\\partial z}\\bigg |_{z,y'_1}\\cdot \\sigma_z\\right)^2 + \\left(\\frac{\\partial y}{\\partial y_1'}\\bigg |_{z,y'_1}\\cdot \\sigma_{y_1}'\\right)^2 =\\left(\\frac{y_1'}{f}\\right)^2\\sigma_z^2 + \\left(\\frac{z}{f}\\right)^2\\sigma_{y'_1}^2$\n\n$\\sigma_x^2 = \\left(\\frac{\\partial y}{\\partial z}\\bigg |_{z,x_1'}\\cdot \\sigma_z\\right)^2+\\left(\\frac{\\partial y}{\\partial x_1'}\\bigg |_{z,x'_1}\\cdot \\sigma_{x_1}'\\right)^2 = \\left(\\frac{x_1'}{f}\\right)^2\\sigma_z^2 + \\left(\\frac{z}{f}\\right)^2\\sigma_{x_1}'^2$\n\n\n\n\n","x":10265,"y":5313,"width":540,"height":363},
		{"id":"1630559b1dc6581b","type":"text","text":"**Allgemein**\n\nDer Fehler in der $z$-Koordinate wächst quadratisch mit dem Abstand\n\n**Image Scale**\n\nDer Fehler in allen drei Koordinaten wächst proportional zur Bildgröße $m_B = z/f$\n\n**Base ratio**\n\nDer Fehler in der $z$-Koordinate wächst umgekehrt Proportional zur *base ratio* $m_V = b/z$\n\nDie Fehler in den $x$- und $y$-Koordinaten werden in $m_V  = b/z$ kaum beeinflusst\n\nFür $m_V = b/z = 1$ sind alle Fehler annähernd identisch.\n","x":10985,"y":5813,"width":560,"height":461},
		{"id":"5a5c812363b1a10c","type":"text","text":"**Normalfall**: \nDie Rekonstruktion eines 3d Objekts wird einfach, falls (für $N_i = O_i, H_i = O'_i,i=1,2$) beide *View directions*\n- Rechtwinklig zur *base line* in x-Richtung liegen, d.h. die Linie die einzelnen Center of Projections der jeweiligen Kameras verbindet\n- Den Abstand $b$ haben\n- und parallel zueinander liegen.\n\n$N_1 = (0,0,0)^t$,\n$N_2 = (b,0,0)^t$,\n$H_1 = H_2 =(0,0)^t$,\n$R_1 = R_2 = I$,\n$f_1 = f_2 = f$\n","x":9445,"y":3853,"width":790,"height":400},
		{"id":"485dc666aa19975d","type":"text","text":"##### Normalfall der Stereovision\n\n**Input:** Zwei Korrespondierende Bildpunkte $P'_1, P'_2$, desselben Objektpunktes $P$ aus zwei *Halbbildern* die sich zu ca. $60\\%$ überlappen.\n\n**Output:** Die Rekonstruktion des ursprünglichen Objekts aus den korrespondierenden Bildpunkten\n\n**Annahmen**: \n- intrisische Kameraparameter $f,H$\n- extrinsische Kameraparameter $R,N$ und\n- Relative Positionen der einzelnen Kameras sind bekannt.\n\n**Notation:** Index $1$ bezeichnet Quantitäten im ersten bzw. linken *Halbbild*, index $2$ im zweiten bzw. rechten *Halbbild*","x":9760,"y":3129,"width":645,"height":424},
		{"id":"33502ba2ff04387c","type":"file","file":"Pasted image 20240603170350.png","x":10405,"y":3935,"width":400,"height":236},
		{"id":"9685dacf6603ae8d","type":"file","file":"Pasted image 20240603165415.png","x":10525,"y":3345,"width":400,"height":208},
		{"id":"f3783658e54ad5cf","type":"text","text":"##### Photometrische Diskrepanz\n\nHervorgerufen durch Oberflächenreflektionen (specular reflection)\n- Highlights treten an unterschiedlichen Bildpositionen auf","x":6100,"y":3627,"width":420,"height":205},
		{"id":"b59ca6d0d410f5fd","type":"text","text":"##### Monokulare Okklusionen an Objektkanten\n- Schwer für Stereo Algorithmen","x":6110,"y":3310,"width":452,"height":92},
		{"id":"efbc5ef093ef8e2a","type":"file","file":"Pasted image 20240603164131.png","x":6720,"y":3249,"width":400,"height":214},
		{"id":"c1367ec4e057f66c","type":"file","file":"Pasted image 20240603163944.png","x":6720,"y":3627,"width":400,"height":214},
		{"id":"a31a68b6d78da85f","type":"text","text":"##### Laser Scanning\n\nEs gibt zwei verschiedene technische Prinzipien des Laser Scannings, diese sind:\n\n- **Time-of-flight (TOF)**: \n\tBestimme die Zeitdauer zwischen einem abgestrahlten Laser Impuls zum Zeitpunkt $t_0$ und dem aufgezeichneten Sensorfeedback von diesem Puls zum Zeitpunkt $t_1$\n\t$$d = \\frac{t_1-t_0}{2}c$$\n\tDie anzuwendende konstante der Lichtgeschwindigkeit bestimmt sich durch das Medium in dem dieses Verfahren angewendet wird (im Wasser bewegt sich Licht langsamer, daher wäre $c$ hier nicht korrekt)\n\t\n\t![[Pasted image 20240609152152.png]]\n\n- **Optische Triangulation:**\n\t Messe die \"Verzerrung\" eines projezierten Musters\n\t ![[Pasted image 20240609152400.png]]","x":7613,"y":3213,"width":880,"height":1561},
		{"id":"9f27a66eb775f3c7","type":"file","file":"Pasted image 20240603163635.png","x":6762,"y":3993,"width":400,"height":214},
		{"id":"60d354697dc03259","type":"text","text":"##### Grauwertdiskrepanz\n\nGrauwert- und Shading- Diskrepanzen werden durch verschiedene Normalen der Objektpunkte in diffusen Reflektionen der Bilder hervorgerufen","x":6080,"y":4022,"width":440,"height":157},
		{"id":"b32099d5228a6b89","type":"file","file":"Pasted image 20240603154810.png","x":12904,"y":-1332,"width":400,"height":213},
		{"id":"1cb6c915ac48b417","type":"file","file":"Pasted image 20240603154655.png","x":12484,"y":-1426,"width":289,"height":400},
		{"id":"ef11cb481f789e1b","type":"file","file":"Pasted image 20240603161233.png","x":14133,"y":-602,"width":400,"height":216},
		{"id":"0b66d29e0c4a9d67","type":"file","file":"Pasted image 20240603161154.png","x":14444,"y":-1066,"width":400,"height":296},
		{"id":"8fa99c395f4ddae1","type":"file","file":"Pasted image 20240603155236.png","x":15351,"y":-770,"width":400,"height":297},
		{"id":"15e5a0452bd18f12","type":"file","file":"Pasted image 20240603155207.png","x":15871,"y":-1014,"width":400,"height":392},
		{"id":"1130301b714ce46f","type":"file","file":"Pasted image 20240603155150.png","x":15871,"y":-565,"width":400,"height":392},
		{"id":"96562fe10b5bd099","type":"file","file":"Pasted image 20240603155711.png","x":16631,"y":-708,"width":399,"height":214},
		{"id":"dafab85b84c725e5","type":"text","text":"##### Grundlagen\n\nDie 3D Datenerfassung folgt oft einem 2-stufigen Ansatz bestehend aus:\n\n- Lokalisierung des Sensors\n- Lokalisierung der 3D Daten relativ zum Sensor","x":10253,"y":164,"width":464,"height":250},
		{"id":"cd7546560bcb1a36","type":"text","text":"##### 3. 3D Datenerfassung\n\nIn diesem Kapitel befassen wir uns mit den verschiedenen Techniken Objekte aus der physischen Welt in einer Art zu erfassen, dass diese von Rechnern (effektiv) verarbeitet werden können.","x":9513,"y":1140,"width":500,"height":220},
		{"id":"eea32372492d13af","type":"text","text":"##### Beispiele","x":11813,"y":1004,"width":184,"height":50},
		{"id":"3a0e0dfb54dff6ad","type":"file","file":"Pasted image 20240603152739.png","x":8592,"y":174,"width":400,"height":213},
		{"id":"7529049661febfbf","type":"file","file":"Pasted image 20240603154144.png","x":9563,"y":-226,"width":400,"height":275},
		{"id":"b225c78a261d5d2c","type":"text","text":"##### Transmissive Erfussungstechniken","x":13493,"y":753,"width":418,"height":60},
		{"id":"6921ffae7b19de13","type":"file","file":"Pasted image 20240603160048.png","x":12773,"y":2134,"width":400,"height":253},
		{"id":"a1641c64b669e006","type":"file","file":"Pasted image 20240603160849.png","x":13493,"y":1255,"width":399,"height":211},
		{"id":"af047f0c28eca829","type":"file","file":"Pasted image 20240603160812.png","x":12574,"y":1054,"width":400,"height":221},
		{"id":"3ba2d98051f0cc2f","type":"file","file":"Pasted image 20240603160031.png","x":13284,"y":2153,"width":399,"height":214},
		{"id":"7dbebbc236ac577f","type":"file","file":"Pasted image 20240603160141.png","x":12773,"y":2571,"width":400,"height":237},
		{"id":"3401990b3896e4e9","type":"file","file":"Pasted image 20240603155527.png","x":15573,"y":814,"width":398,"height":400},
		{"id":"81d3c45f2d409a3d","type":"file","file":"Pasted image 20240603155403.png","x":15573,"y":306,"width":399,"height":296},
		{"id":"082bad1ca8b2c1f1","type":"file","file":"Pasted image 20240603154902.png","x":15973,"y":1832,"width":400,"height":302},
		{"id":"16e93542d429205d","type":"file","file":"Pasted image 20240603155507.png","x":16173,"y":553,"width":398,"height":400},
		{"id":"59664a6ab5cbbb53","type":"file","file":"Pasted image 20240603155436.png","x":16173,"y":2,"width":400,"height":394},
		{"id":"4d915619257c17b9","type":"file","file":"Pasted image 20240603155026.png","x":16213,"y":2232,"width":400,"height":212},
		{"id":"84b864b55f7b6355","type":"file","file":"Pasted image 20240603154926.png","x":16433,"y":1832,"width":400,"height":302},
		{"id":"5af415d1551cc988","type":"file","file":"Pasted image 20240603155559.png","x":17053,"y":907,"width":399,"height":214},
		{"id":"c6b5f6409acc5b50","type":"text","text":"##### 2. Geometrische Grundlagen","x":8253,"y":-1146,"width":339,"height":60},
		{"id":"4e28ba98d75d8fa8","type":"text","text":"#####  Punktdiskrepanz: Horizontale und Vertikale Diskrepanz\n- **Horizontale Diskrepanz**, bspw. im Normalfall (später)\n- **Vertikale Diskrepanz**, bspw. wenn die Viewing Directions der Kameras nicht perfekt Co-Planar ausgerichtet sind.","x":4160,"y":3995,"width":592,"height":150},
		{"id":"625541f4e16d3bca","type":"file","file":"Pasted image 20240603162844.png","x":4456,"y":4384,"width":399,"height":220},
		{"id":"edee9d4f7dfdf560","type":"text","text":"##### Diskrepanzen\n\nBeschreiben Unterschiede in zwei oder mehr Bidlern ein und desselben Objekts.\nWir unterscheiden verschiedene Arten der Diskrepanz","x":4719,"y":3487,"width":528,"height":159},
		{"id":"f4abf0a4c04c6258","type":"text","text":"##### Orientierungsdiskrepanz\n\nOrientierungsdiskrepanzen bzw. allgemeine Form und Größenunterschiede zwischen beiden Bildern.\n\n- Führt immer auch zu Punktdiskrepanz","x":4983,"y":3995,"width":460,"height":176},
		{"id":"ec9b12e667562793","type":"file","file":"Pasted image 20240603163300.png","x":5213,"y":4384,"width":400,"height":214},
		{"id":"eae094def1b7026d","type":"text","text":"##### 5. 3D Registrierung","x":-10870,"y":-5920,"width":250,"height":60},
		{"id":"a417f3fcce0aa3fb","type":"text","text":"##### 6. Von Punktwolken zu Meshes","x":-5920,"y":-12960,"width":348,"height":60},
		{"id":"d8442a97862cfc5d","type":"text","text":"##### Konvertierung\n\n**Schlüsselfrage:** *Was ist eine bessere Repräsentation für die nachfolgenden Bearbeitungsschritte?*\n\n=> Verbessern der Datenrepräsentation\n=> Konvertierung der Datenrepräsentation","x":12165,"y":-10289,"width":480,"height":200},
		{"id":"7e438dcab5c8a040","type":"file","file":"Pasted image 20240603152135.png","x":12582,"y":-8964,"width":400,"height":208},
		{"id":"5ef2e91be67827da","type":"text","text":"##### Segmentierung\n\n**Schlüsselfrage:** *Was sind die relevanten semantischen Komponenten?*\n\n=> Clustern des Datasets\n","x":12765,"y":-9920,"width":394,"height":198},
		{"id":"2045e749b4d3653a","type":"text","text":"##### Visualisierung\n\n**Schlüsselfrage:** *Welche realen Objekte sehen wir?*\n\n=> Visualisierung der Daten mithilfe von gängigen Renderingtechnologien\n=> sonstiges Post-Processing","x":12823,"y":-9200,"width":622,"height":160},
		{"id":"42e965c2fcbe3f36","type":"text","text":"##### Klassifizierung\n\n**Schlüsselfrage**: *Welche realen Objekte sehen wir?*\n\n=> Interpretation der Daten\n=> Objekterkennung (Recognition)","x":12844,"y":-9520,"width":460,"height":195},
		{"id":"585fa46d8eddf8e4","type":"text","text":"##### Registrierung\n\n**Schlüsselfrage:** *Was ist die räumliche relative Pose (d.h. Position + Richtung/Orientierung) der Datensätze?*\n\n=> Ausrichten der Data Sets über versch. Strategien\n- Coarse registration\n- Fine registration\n=> Fusion von mehreren Datasets in ein Dataset\n=> Sensordatenfusion","x":11522,"y":-10400,"width":530,"height":311},
		{"id":"baea3521d44ce1dc","type":"text","text":"##### Clean up\n\n**Schlüsselfrage:** *Was sind die relevanten Daten?*\n\n=> Entfernung von artefakten und überflüssigen/unnötigen Daten aus unseren Datasets","x":11009,"y":-10040,"width":356,"height":246},
		{"id":"f5d2f32c167d0b96","type":"text","text":"##### Datenrepräsentation\n\n**Schlüsselfrage:** Wie stellen wir die Daten im Computer dar?\n\n=> Abhängig von der verwendeten Scantechnologie","x":10845,"y":-9640,"width":458,"height":160},
		{"id":"5884d49c26bd3758","type":"text","text":"##### Datenerfassung und 3D Rekonstruktion\n\n**Schlüsselfrage:** *Was sind die verwendeten Scan- techniken/technologien und welche Sensoren werden verwendet?*\n\n=> Oft verschiedene Datensätze aus unterschiedlichen Perspektiven oder aus unterschiedlichen Quellen\n\n=> Algorithmische Ünterstützung notwendig\n\n\n\n","x":10745,"y":-9380,"width":528,"height":280},
		{"id":"55783365771747b0","type":"text","text":"##### 1. Grundlagen: Die 3D Rekonstruktionspipeline\n\n**Es gibt keine *Standard* Rekonstruktionspipeline, die genaue implementierung hängt sowohl von den verwendeten Technologien als auch von der Anwendung ab!**\n\n\nEinige der obigen Schritte wie *Konvertierung*, *Klassifizierung*, *Segmentierung* und *Visualisierung* können auch fehlen.","x":11765,"y":-9000,"width":480,"height":280},
		{"id":"47c703570da7cf0c","type":"text","text":"##### 7. Punktmeshes","x":1360,"y":-12080,"width":250,"height":60},
		{"id":"be02a1cb91cf80a0","type":"text","text":"##### Quadtrees, Octrees\n\n**Quadtrees** \n\nIn vielen Anwendung ist es von entscheidender Bedeutung 2D/3D Punktmengen mit schneller Zugriffsgeschwindigkeit und möglichst geringem Speicherverbrauch zu speichern (Beispiel: Spiele)\n\nHierfür bieten sich je nach Kontext (2D/3D) Quadtrees bzw. Octrees an. Diese unterstützen eine schnelle Suche nach Blättern im Baum, welche Objekte bzw. Punkte der Szene repräsentieren.\n\nAnwendung von Quad- und Octrees\n- Face Indexing in GIS Programmen (\"Face Indexing\" bezieht sich auf die Methode, bei der die einzelnen Flächen (Faces) eines 3D-Modells oder einer 2D-Geometrie indiziert und verwaltet werden.)\n- Kollisionserkennung in 2D und 3D\n- Entfernung nicht sichtbarer Daten in Terrain Data\n- Ray-Casting bzw. Ray-Tracing, etc.","x":-13460,"y":5420,"width":580,"height":538},
		{"id":"b8d0159f3a3a29e9","type":"text","text":"##### Übersicht Quadtree\n\nEin Quadtree ist ein Baum bei dem jeder innere Knoten vier Kindsknoten hat.\n- Knoten entsprechen quadratischen Regionen\n- Falls ein Knoten $v$ Kinder hat, entsprechen diese den 4 Quadranten des Quadranten der $v$ entspricht\n- Die Kinder der Wurzel der Subtrees werden nach den Quadranten benannt\n\t- NE - North East Quadrant\n\t- NW - North West Quadrant\n\t- SE - South West Quadrant\n\t- SW - South West Quadrant\n\n- Die Quadrate aller Blätter partitionieren die Quadrate auf Basis der Wurzel, dies wird *quadtree-partition* genannt","x":-13592,"y":6650,"width":660,"height":430},
		{"id":"34bdd986fbe3a288","type":"file","file":"Pasted image 20240611181623.png","x":-11773,"y":7261,"width":249,"height":222},
		{"id":"31e5610057b171c2","type":"text","text":"##### Formale Definition\n\nSei $\\sigma := [x_{\\sigma}, x'_{\\sigma}]\\times[y_{\\sigma},y_{\\sigma}']$ ein Quadrat und $P$ eine Menge von Punkten in $\\mathbb{R}^2$.\n\nFalls |$P$| $\\leq 1$ handelt es sich bei dem Quadtree um ein einzelnes Blatt, welches $\\sigma$ und $P$\n\nAndernfalls bezeichne \n- mit $\\sigma_{NE}$, $\\sigma_{NW}$, $\\sigma_{SE}$ und $\\sigma_{SW}$ die vier Quadranten von $\\sigma$\n- mit $x_{mid} := (x_{\\sigma}+x_\\sigma')/2$ und $y_{mid}:=(y_\\sigma + y_\\sigma') / 2$  und\n\n- $P_{NE} := \\{p\\in P:p_x > x_{mid} \\land p_y > y_{mid}\\}$\n- $P_{NW}:=\\{p\\in P:p_x \\leq x_{mid} \\land p_y > y_{mid}\\}$\n- $P_{SW} := \\{p\\in P:p_x\\leq x_{mid}\\land p_y \\leq y_{mid}\\}$\n- $P_{SE} := \\{p\\in P: p_x>x_{mid} \\land p_y \\leq y_{mid}\\}$\n\n\n","x":-11523,"y":6455,"width":500,"height":421},
		{"id":"238608a5c795c58a","type":"file","file":"Pasted image 20240611183747.png","x":-10960,"y":6560,"width":235,"height":211},
		{"id":"cec28a95e0ab8f4d","type":"text","text":"#### Quad Tree Ansatz (Rastermethode) für Bereichsabfragen\n\n- Bereichsabfrage: Bestimme Punkte die innerhalb eines benutzerdefinierten, achsen ausgerichteten Intervall liegen\n- Platziere ein Reguläres Grid über eine Menge $P$ von Punkten\n- Berücksichtige nur Punkte innerhalb der Gridzellen, welche das Intervall schneiden\n\nEffizient, falls die Punkte gleichmäßig verteilt sind\n\nInneffizient, falls die Punkte in einem Gridbereich konzentriert sind und das Grid ansonsten viele leere Zellen hat.","x":-14674,"y":6650,"width":698,"height":340},
		{"id":"f6446f2b78d296ee","type":"file","file":"Pasted image 20240611171835.png","x":-12703,"y":6352,"width":280,"height":207},
		{"id":"c5841782e70c8142","type":"file","file":"Pasted image 20240611171917.png","x":-12260,"y":6746,"width":187,"height":260},
		{"id":"949922df5f113365","type":"text","text":"##### Terminologie\n\nDie vier Knoten der Ecken der Quadrate werden *corners* (Ecken) genannt\n\nLiniensegmente die Ecken ein und desselben Quadrats verbinden werden *sides* (Seiten) des Quadrats genannt.\n\nKanten der quadtree-partition, welche innerhalb der Seiten eines Quadrats liegen werden *edges* (Kanten) des Quadrats genannt.\n\n=> Eine Seite beinhaltet immer mindestens eine Kante\n\nZwei Quadrate sind Nachbarn, falls sie eine gemeinsame Kante haben","x":-12480,"y":7300,"width":627,"height":339},
		{"id":"5c51599d769f7ed6","type":"text","text":"##### Konzept\n\nDer Quadtree hat eine Wurzel $v$, welche das Quadrat $\\sigma$ speichert, auf die Wurzel kann mit $\\sigma(v)$ zugegriffen werden.\n\nJedes innere Kind $v$ kann vier Kinder haben:\n- Das $NE$ Kind ist die Wurzel des Quadtree für die Menge $P_{NE}$ von Punkten, welche im Quadrat $\\sigma_{NE}$ liegen\n- Das $NW$ Kind ist die Wurzel des Quadtree für die Menge $P_{NW}$ von Punkten, welche im Quadrat $\\sigma_{NW}$ liegen\n- Das $SW$ Kind ist die Wurzel des Quadtrees für die Menge $P_{SW}$ von Punkten, welche im Quadrat $\\sigma_{SW}$ liegen\n- Das $SE$ Kind ist die Wurzel des Quadrats für die Menge $P_{SE}$ von Punkten, welche im Quadrat $\\sigma_{SE}$ liegen","x":-14560,"y":7280,"width":820,"height":420},
		{"id":"a587d4ecc82657aa","type":"text","text":"##### Konstruktion\n\nDie Rekursive Definition liefert einen Algorithmus um einen Quadtree zu konstruieren.\n- Starte mit einem initialen Quadrat welcher alle Punkte enthält (Bounding Box)\n- Teile das aktuelle Quadrat in 4 gleichmäßige Unterquadrate auf und partitioniere die Punkte entsprechend\n- Konstruiere (rekursiv) die Quadtrees der 4 Quadrate mit den entsprechenden Partitionen\n- Beende die Rekursion wenn die Punktmenge weniger als zwei Punkte beinhaltet\n\nFalls das initiale Quadrat (Bounding Box) zu Beginn der Konstruktion nicht bekannt ist, kann es in Linearzeit aus der Punktmenge bestimmt werden.","x":-14560,"y":7924,"width":820,"height":336},
		{"id":"8fa0e482247f86c8","type":"text","text":"##### Beobachtung\n\nNach jedem Schritt werden die Quadrate in 4 kleinere Quadrate aufgeteilt\n- Dies gilt auch für die betreffenden Punktmengen\n![[Pasted image 20240611210443.png]]\n\n- Quadtrees können stark Unbalanciert ausfallen\n- Die Tiefe und Größe eines Quadtrees hängen von der Distanz der Punkte untereinander und der Größe der Bounding Box ab\n\n","x":-13560,"y":7862,"width":462,"height":460},
		{"id":"6464d2be05e2010c","type":"text","text":"##### Lemma\n\nDie Tiefe eines Quadtrees für eine Punktmenge $P$ in der Ebene ist höchstens $\\log_2\\left(\\frac{s}{2}\\right) + \\frac{3}{2}$\n\nwobei:\n- $c$ die kleinste Distanz zwischen zwei Punkten in $P$ ist\n- $s$ die Länge der Seiten der Bounding Box von P ist.\n\n","x":-13560,"y":8488,"width":462,"height":312},
		{"id":"d2637eae0e3ddd93","type":"text","text":"##### Beweis:\n\n![[Pasted image 20240611212249.png]]\n\nDie Größe der Quadrate halbiert sich mit jedem Level des Baums\n\nFür einen Knoten in Tiefe $i$ ist die Seitenlänge $s/2^i$, die Wurzel hat Tiefe 0\n\nDie größte Distanz zwischen zwei Punkten in einem Quadrat ist die Länge der Diagonalen, welche für Tiefe $i$ durch $s\\sqrt{2}/2^i$ \n\nEin inneres Kind in Tiefe $i$ beinhaltet mindestens 2 Punkte, welche $s\\sqrt{2}/2^i \\geq c$ erfüllen.\n\nAuflösen nach $i$ resultiert in:\n$$i \\leq \\log_2\\left(\\frac{s\\sqrt{2}}{c}\\right)=\\log_2\\frac{s}{c}+\\frac{1}{2}$$\nDie Tiefe des Quadtree entspricht genau der maximalen Tiefe eines inneren Kindknotens + 1","x":-12880,"y":8408,"width":480,"height":686},
		{"id":"9120928cbc2ba29f","type":"text","text":"##### Proposition\n\nEin Quadtree der Tiefe $d$ welcher eine Menge mit $n$ Punkten speichert\n- hat $O((d+1)n)$ Knoten und\n- Kann in $O((d+1)n)$ konstruiert werden\n\nD.h. dass sowohl die Anzahl der Knoten als auch die bnötigte Konstruktionszeit linear von der Tiefe des Baums und der Anzahl der gespeicherten Punkte abhängen.\n","x":-14560,"y":8459,"width":820,"height":261},
		{"id":"5ba47ca4622b9870","type":"text","text":"##### Beweis der Konstruktionszeit\n\n2. Konstruktionszeit\n\t- Die Zeitaufwendigste Operation in jedem Schritt des rekursiven Algorithmus ist das Partitionieren eines Quadrats in seine 4 Quadranten\n\t- Die Zeit wird für jeden inneren Knoten aufgewendet und ist linear im Zusammenhang mit der Anzahl an Punkten im Quadrat\n\t- Da die gesamtanzahl an Punkten in einem internen Knoten höchstens $n$ sein kann, ist die obere Schranke der Konstruktionsdauer $O((d+1)n)$ ","x":-14040,"y":8880,"width":640,"height":363},
		{"id":"0d12a39833ec9001","type":"text","text":"##### Beweis der Anzahl der Knoten\n\n1. Anzahl Knoten\n\t- Jeder Innere Knoten hat 4 Kinder\n\t- Die Gesamtanzahl an Blättern ist 1 + 3 * Anzahl innere Knoten (Es reicht die Anzahl der inneren Knoten zu schätzen)\n\t- Ein innerer Knoten hat mindestens einen Punkt in seinem zugehörigen Quadrat und Quadrate von Knoten auf dem selben Level sind disjunkt und überdecken ihren Wurzelknoten exakt\n\n\t- Die Gesamtanzahl an Knoten auf einem bel. Level ist höchstens $n$\n\t- Die Wurzel hat Level 0, die Behauptung für die Anzahl der Kinder ergibt sich dann\n\n$$\\#\\textrm{inner node} + \\#\\textrm{leaves} \\leq n\\cdot (d+1)+3\\cdot n\\cdot (d+1)+1 = O((d+1)n)$$","x":-14940,"y":8880,"width":760,"height":363},
		{"id":"2bdc3140a76981c5","type":"text","text":"##### Vor- und Nachteile von Quad- und Octrees\n\n**Vorteile von Quad- und Octrees**:\n- Einfach zu implementieren\n- Effiziente Algorithmen falls der Datensatz gut Ausbalanciert ist\n- Kann dynamisch aktualisiert werden (Echtzeitverarbeitung)\n\n**Nachteile von Quad- und Octrees**:\n- Kann stark unbalanciert werden, abhängig von der Verteilung der Daten.\n- Ineffiziente Algorithmen, falls die Daten unbalanciert sind.\n\n**Alternativen**:\n- $kd$-Bäume, Range-Trees, bsp-Trees, Trapezoidal Maps, Half-Edges, etc.\n- Abhängig von der Anwendung","x":-12349,"y":5440,"width":553,"height":520},
		{"id":"31bcc49832ac66d6","type":"text","text":"##### Punktwolken Datenstrukturen","x":-13582,"y":4360,"width":412,"height":72},
		{"id":"773a1b24ad56d56a","type":"file","file":"Pasted image 20240611165859.png","x":-15195,"y":6760,"width":400,"height":217},
		{"id":"f0af1faf88533472","type":"text","text":"Quadtrees können verschiedene Typen von Daten speichern, in den folgenden Beispielen gehen wir nur von Punktwolken in der Ebene aus","x":-15120,"y":7060,"width":250,"height":219},
		{"id":"7347d4f5352c8b96","type":"file","file":"Pasted image 20240616121711.png","x":-16600,"y":5290,"width":400,"height":164},
		{"id":"ad7efc39ad539cdb","type":"text","text":"##### kd-Trees\n\nIm Folgenden werden $kd$-Trees für zweidimensionale Daten beschrieben, d.h. $k=2$ die Anwendung für $k > 2$ erfolgt analog.\n\n**Idee**:\n- Partitioniere den 2D Suchraum analog wie ein binärer Suchbaum für eindimensionale Suchräume\n- Verwende alternierend die $x-$ und $y-$Koordinaten als Schlüssel\n- Konstruiere einen Binärbaum, als Repräsentation der Partitionierung der Ebene\n\t- Die Knoten entsprechen den $n$ Punkten in 2d\n\t- In einem geradzahligem Level des Baums (Level = Tiefe + 1) verwende die $x-$Koordinate als Schlüssel, sonst die $y-$Koordinate","x":-17161,"y":5200,"width":481,"height":507},
		{"id":"33ae4e12206fa96e","type":"text","text":"##### Eigenschaften\n\nFür einen Knoten im Baum $v_x$ welcher den Punkt $p_x$ repräsentiert und dessen Schlüssel die $x-$Koordinate ist (level % 2 == 0) haben wir:\n- Den linken Teilbaum von $v_x$ welcher die Punkte links von $p_x$ enthält\n- Den rechten Teilbaum von $v_x$ welcher die Punkte rechts von $p_x$ enthält\n- Die Teilbäume der Kinder von $v_x$ werden durch ihre $y-$Koordinate bestimmt.\n\nFür einen Knoten im Baum $v_y$ welcher den Punkt $p_y$ repräsentiert und dessen Schlüssel die $y-$Koordinate ist (level % == 1) haben wir:\n- Den linken Teilbaum von $v_y$ welcher die Punkte unterhalb von $p_y$ beinhaltet.\n- Den rechten Teilbaum von $v_y$ welcher die Punkte oberhalb von $p_y$ beinhaltet.\n- Die Teilbäume der Kinder von $v_y$ werden durch ihre $x-$Koordinate bestimmt.","x":-17161,"y":5880,"width":481,"height":607},
		{"id":"8d33799a9850cbc1","type":"text","text":"##### Laufzeit\n\n- Falls der 2d-Tree balanciert ist, ist die Höhe des Trees $O(\\log n)$ da es sich um einen Binärbaum handelt\n- Falls der 2d-Tree unbalanciert ist, degeneriert ein Pfad möglicherweise zu einer linearen Liste, wodurch sich die Laufzeit auf $O(n)$ erhöht.\n\n**Ziel:**\n- Die Konstruktion des Baums muss eine gute Balancierbarkeit garantieren\n\n**Lösung:**\n- Partitionieren der Punkte am Median der Sequenzen der $x-$ und $y-$Koordinaten","x":-17161,"y":6674,"width":481,"height":473},
		{"id":"0eaeb25e34173456","type":"file","file":"Pasted image 20240616130552.png","x":-18840,"y":6674,"width":400,"height":211},
		{"id":"73b7f78fbdd835f4","type":"file","file":"Pasted image 20240616135623.png","x":-18840,"y":6987,"width":399,"height":204},
		{"id":"547c1f545224f25a","type":"text","text":"##### Grundlegende Idee\n\n- Der Eingabeknoten $v$ kann auch ein innerer Knoten sein.\n- Der Algorithmus sucht nach einem Knoten $v'$ mit folgenden Eigenschaften:\n\t- $\\sigma(v')$ und $\\sigma(v)$ sind benachbart in Richtung $\\delta$\n\t- beide Knoten haben dieselbe Tiefe.\n- Falls kein solcher Knoten existiert, berechne den tiefsten Knoten:\n\t- dessen Tiefe maximal der Tiefe von $v$ entspricht \n\t- dessen Quadrat in Richtung $\\delta$ benachbart ist\n- Falls auch ein solcher Knoten in Richtung $\\delta$ nicht existiert gebe *NULL* zurück ","x":-16060,"y":8633,"width":563,"height":409},
		{"id":"a54ff8310508e391","type":"text","text":"##### Beispiel\n\nAngenommen wir suchen nach dem Nachbar von $v$\n\nFalls $v$ ein $SE-$ oder $SW-$ Kind ist, ist der nördliche Nachbar von $v$ der $NE-$ oder $NW-$ Geschwisterknoten\n\nFalls $v$ ein $NE-$ oder $NW-$ Kind ist, suche rekursiv den nördlichen Nachbarn $w$ seines Elternknotens\n- Falls $w$ ein innerer Knoten ist, ist der nördliche Nachbar von $v$ ein Kind von $w$\n- Falls $w$ ein Blatt ist, ist der nördliche Nachbar von $v$ genau $w$","x":-16060,"y":9340,"width":563,"height":440},
		{"id":"7b35beab4d8f3cd1","type":"text","text":"##### Beispielimplementierung *FindNorthNeighbor*\n```cpp\nNode FindNorthNeighbor(Node v, QuadTree T) {\n\tif (v == root(T)) then return null;\n\tp = parent(v);\n\tif (v == SW-child(p)) then return NW-child;\n\tif (v == SE-child(p)) then return NE-child;\n\tw = FindNorthNeighbor(p, T);\n\tif (w == null or w is a leaf) then return w;\n\telse {\n\t\tif (v == NW-child(p)) then return SW-child(w);\n\t\telse                       return SE-child(w);\n\t}\n}\n```","x":-16130,"y":9900,"width":703,"height":380},
		{"id":"f9c08d1f149d27a7","type":"text","text":"##### Proposition\n\nSei $T$ ein Quadtree mit Tiefe $d$. Der Nachbar eines Knotens $v$ in $T$ kann in jeder Richtung $\\delta$ in $O(d+1)$ bestimmt werden.","x":-16200,"y":10400,"width":422,"height":260},
		{"id":"a8a8f20833bd9ec5","type":"text","text":"##### Eigenschaften\n\nDer Algorithmus benötigt pro rekursivem Aufruf nur $O(1)$ und die Tiefe des tatsächlichen Knoten $v$ wird dabei jeweils um 1 reduziert.\n\nDie Laufzeit ist linear in Abhängigkeit zur Tiefe des Quadtrees","x":-15720,"y":10400,"width":408,"height":260},
		{"id":"9d5866ad7cf24abc","type":"text","text":"##### Suchen\n\nEine der Grundlegensten Baum-Operationen im Allgemeinen und auch bei Quad- und Octree ist die Suche.\n\nIm Falle von Quad- und Octree die Suche bzw. das Finden von Nachbarn.\n\n**Eingabe:** Ein Knoten $v$ und eine Richtung $\\delta$ wobei $\\delta\\in\\{\\textrm{North, South, West, East}\\}$\n\n**Ausgabe:** Ein Knoten $v'$, wobei $\\sigma(v')$ ein Nachbar von $\\sigma(v)$ in Richtung $\\delta$ ist\n\nOft handelt es sich bei Ein- und Ausgabeknoten um Blätter:\n- Vergleich *Suche nach benachbarten Quadraten bei der Quadtree Partition*","x":-16060,"y":7886,"width":563,"height":454},
		{"id":"3ddfed4322825baf","type":"file","file":"Pasted image 20240615193825.png","x":-15312,"y":9360,"width":166,"height":400},
		{"id":"554ab7a2b99f0163","type":"text","text":"##### Suchen\n\nDie Suche funktioniert analog zur Suche in klassischen Binärbäumen.\n\n**Achtung:** \n- Für jedem besuchten Knoten im Baum wird der Teilbaum anhand der $x-$ ODER der $y-$Koordinate bestimmt\n- Für eine Range-Search müssen jeweils beide Teilbäume untersucht werden\n\n![[Pasted image 20240616142612.png]]\n\n\n","x":-16440,"y":5923,"width":534,"height":523},
		{"id":"9e2f5b27eda18778","type":"file","file":"Pasted image 20240616144352.png","x":-15595,"y":6360,"width":400,"height":182},
		{"id":"8c5a3986a67c2917","type":"text","text":"##### Laufzeit\n\nDer Nachweis der Laufzeit für die Range Search in einem 2d-Tree ist nicht trivial\n\n- Laufzeit für $R$ Punkte in der Bereichsabfrage $D: O(\\sqrt(n)+R)$\n- Für kleine $R§ sehr viel schneller als die Überprüfung aller Punkte","x":-16440,"y":6623,"width":534,"height":257},
		{"id":"1f3e82484c46f0e1","type":"file","file":"Pasted image 20240610230702.png","x":-15460,"y":5323,"width":339,"height":400},
		{"id":"e2ad118f19398d32","type":"text","text":"##### Gitterdaten\n\nBasieren auf orthogonal angeordneten, einheitlichen Grids\n\nDie **Topologie** bestimmt sich durch die Anzahl an Zellen in $x$-, $y$- und $z$-Richtung\n\nDie Geometrie bestimmt sich durch\n- Ursprung und Zellenbreite oder\n- Werten und Attributen in der Zelle\n\nDie Zellen werden *Pixel* oder auch *Voxel* genannt.\n\nBeispiel:\n\nUrsprung $O = (-1,-1)$, $x_{\\textrm{dim}} =0.2$, $y_{\\textrm{dim}}=0.25$, $n_x=8$, $n_y = 8$\n\nEin typisches Beispiel für Gitterbasierte Daten sind RGB-Bilder","x":-14940,"y":5294,"width":570,"height":457},
		{"id":"2ee4ca8205145b27","type":"text","text":"##### Höher Dimensionale $kd$-Trees\n\n- Verwenden denselben Algorithmus\n- Für die Konstruktion des Baums wird für jede Koordinate einzeln partitioniert, und die Level zyklisch Aufgebaut (vgl. $2d-$Trees)\n- Für die Suche wird ebenfalls zyklisch durch die $k$ Dimensionen iteriert\n- Laufzeit und Speicherverbrauch\n\t- Konstruktion: $O(k\\cdot n\\log n)$\n\t- Speicher: $O(n)$ (Ein $kd-$Baum ist ein Binärbaum mit $n$ Blättern)\n\t- Range Search (Bereichsuche): $O(kn^{1-\\frac{1}{k}}+R)$","x":-18430,"y":5294,"width":680,"height":320},
		{"id":"9ef68854272582d1","type":"text","text":"##### Partitionierung am Median\n\n- Sortiere alle Punkte einmal nach ihren $x-$ als auch nach ihren $y-$Koordinaten\n\t- Dies Resultiert in zwei sortierten Listen $X$, $Y$\n- Teile $Y$ am Median auf und verwende diesen Median als Wurzel des Baums\n\t- Wir erhalten zwei sortierte unterlisten $Y_1$ und $Y_2$\n- Teile $X$ am Median in zwei Sequenzen $X_1$ und $X_2$ so auf, dass $X_1$ dieselben Punkte wie $Y_1$ und $X_2$ dieselben Punkte wie $Y_2$ enthält.\n- Partitioniere $X_1$ und $X_2$ rekursiv solange am jeweiligen Median bis beide Sequenzen jeweils nur einen Punkt beinhalten.\n\t- Diese Punkte sind die Blätter des Baums.","x":-18090,"y":6674,"width":500,"height":473},
		{"id":"abda93ad968f7b1c","type":"file","file":"Pasted image 20240616144233.png","x":-15460,"y":6069,"width":399,"height":229},
		{"id":"31f72d8aa13e5f16","type":"text","text":"##### Laufzeit\n\n- Konstruktion:\n\t- Sortierung der Sequenzen: $O(n\\log n)$\n\t- Partitionierung der Sequenzen: $O(n)$\n\t- Rekursive Aufrufe: $T(n) = \\left(\\lceil\\frac{n-1}{2}\\rceil\\right)$\n\t- Lösung der Rekursion: $O(n\\log n)$\n- Speicherverbrauch: \n\t- $O(n)$ da es sich beim $kd-$Tree um einen Binärbaum mit $n$ Blättern handelt","x":-18056,"y":7380,"width":432,"height":320},
		{"id":"050c4de8d10c5146","type":"text","text":"##### bsp-Trees\n\nBSP steht für Binary Space Partition\n\n**BSP-Ansatz:**\n- Partitioniere die Punktmenge $P$ entlang beliebiger (hyper-) Planes\n\n**Effizienz**:\n- falls die (hyper-) Planes achsenausgerichtet sind, wie bei $kd-$Trees\n- falls die (hyper-) Planes beliebig ausgerichtet aber dennoch optimal sind um eine möglichst geringe Tiefe zu erhalten\n\n**Ineffizienz:**\n- Weil der Schnittbereich einer einer rechteckigen Bereichsabfrage mit beliebigen Halbräumen ein beliebiges konvexes Polygon (konvexes Polyeder in $k$ Dimensionen) ist.\n\n**Vorgehen:**\n- Datenstruktur zum Sortieren und Aufteilen von Polygonen/Polyhedrons wie auch Point Clouds ist ein *Binary Space-Partioning Tree* (bsp-Tree)\n- Ein BSP-Tree partitioniert $\\mathbb{R}^d$ rekursiv entlang beliebiger hyper Planes (($d-1$)-dimensionale affine Unterräume)\n- Die Blätter des Baums teilen $\\mathbb{R}^d$ in die sogenannte *bsp-Partition*\n\t- Die Blätter beinhalten die Flächen der bsp-Partition und die Objektfragmente innerhalb dieser Fläche. ","x":-10010,"y":5411,"width":790,"height":724},
		{"id":"d5930c4a3551ef90","type":"file","file":"Pasted image 20240616162615.png","x":-8960,"y":5589,"width":400,"height":184},
		{"id":"f1bd9efc16b07d1a","type":"text","text":"##### Hyperplanes und Konstruktion\n\nDie hyper-Plane $h$ eines inneren Knotens wird durch einen Punkt $p_h\\in \\mathbb{R}^d$ und einen (normalisierten) Normalenvektor $n_h\\in \\mathbb{R}^d$ und teilt den Raum in zwei Halbräume:\n\n$$h^+:= \\{q|(q-p_n)^t\\cdot n_h > 0\\}$$\n$$h:= \\{q|(q-p_n)^t\\cdot n_h = 0\\}$$\n$$h^-:= \\{q|(q-p_n)^t\\cdot n_h < 0\\}$$\nWährend der rekursiven Konstruktion eines bsp-Trees werden die Objekte in zwei Halbräume aufgeteilt, welche den zwei Kindknoten entsprechen\n- Objekte die zu beiden Halbräumen gehören werden in Fragmente aufgeteilt\n- Objekte welche gänzlich in $h$ liegen werden in einer dem Knoten zugehörigen Liste gespeichert","x":-10010,"y":6429,"width":790,"height":426},
		{"id":"c8fc22f437148fa5","type":"text","text":"##### Wie wählt man die besten hyper-Planes?\n\n- Falls es sich bei den gespeicherten Objekte um Polygonen/Polytopen/Polyhedrons/freiformige Formen handelt, können die Hyperplanes durch Kanten oder Flächen der individuellen Objekte definiert werden. Dies resultiert in der sogennanten ***auto partitioning*** Strategie\n\t- In 2d müssen nur die Kanten bzw. Liniensegmente der Objekte partitioniert werden\n- Falls es sich bei dem Objekt um eine Punktwolke handelt, kommt die ***Principal Component Analysis*** (PCA) zum Einsatz welche eine Partitionierungsstrategie liefert.","x":-8640,"y":6455,"width":545,"height":367},
		{"id":"e755bc2433b3a968","type":"file","file":"Pasted image 20240616170616.png","x":-7880,"y":6415,"width":400,"height":168},
		{"id":"56246061a3730a5d","type":"text","text":"##### Proposition\n\nMit einem bsp-Tree der Größe $m$ kann das korrekte Sortieren von Polygonen entlang einer gegebenen Suchachse $z$ in Linearzeit $O(m)$ berechnet werden.\n\n**Proof:**\n- Die Sortierung wird über die Traversierung der Teilbäume in folgender Reihenfolge generiert\n  $$\\left\\{\\begin{array}{ll}h^+, h, h^-,& \\text{falls } z\\cdot n_h>0\\\\h^-,h,h^+,& \\text{sonst}\\end{array}\\right.$$\n- Jeder Knoten wird nur einmal besucht\n- Aufgrund der Aufteilung gibt es keine zyklische Überlappung","x":-9500,"y":7255,"width":790,"height":400},
		{"id":"9fa47023a5a2c425","type":"text","text":"##### Struktur und Eigenschaft von bsp-Trees\n\n- Jeder innere Knoten entspricht einem Bereich aus $\\mathbb{R}^d$, definiert durch den Schnitt aller Halbräume der darüberliegenden Knoten\n- Die Größe eines bsp-Trees, d.h. die Anzahl seiner Knoten hängt linear ab von\n\t- Der Anzahl an Objekten\n\t- Der Anzahl an Fragmenten von Objekten, welche wiederrum von der Reihenfolge der Schnitte abhängen\n- Beispiel:\n  ![[Pasted image 20240616174509.png]]","x":-10240,"y":7255,"width":511,"height":480},
		{"id":"ec1efdf3cac058fb","type":"text","text":"##### 3-Dimensional (3D Kurve)\n\nRaumkurve bzw. Trajektorie, 1-Mannigfaltigkeiten eingebettet in $\\mathbb{R}^3$\n$$c:\\mathbb{R}\\rightarrow \\mathbb{R}^3,t\\mapsto c(t)=\\begin{pmatrix}x(t)\\\\y(t)\\\\z(t)\\end{pmatrix}$$","x":-15453,"y":735,"width":400,"height":240},
		{"id":"3c7d662acff45cd3","type":"text","text":"##### 2.5-Dimensional (Höhenfelder)\n\n2d Funktionen, Höhenfelder, Skalarfelder\n\n$$h:\\mathbb{R}^2\\rightarrow \\mathbb{R}, (x,y) \\mapsto h(x,y)=z$$\n\n","x":-16013,"y":1060,"width":470,"height":160},
		{"id":"0a0d0ae811032bed","type":"text","text":"##### 2-Dimensional (Kurve)\n\n(Parametrisierte Kurve (1 Parameter)) auch 1-Mannigfaltigkeit genannt eingebettet in $\\mathbb{R}^2$\n\n$$c: \\mathbb{R}\\rightarrow \\mathbb{R}^2, t\\mapsto c(t)=\\begin{pmatrix}x(t)\\\\y(t)\\end{pmatrix}$$\n\n","x":-17013,"y":610,"width":399,"height":193},
		{"id":"20c1517bf7af8aef","type":"text","text":"##### 2-Dimensional (Parametrisierte Kurve (2 Parameter))\n\n$$s:\\mathbb{R}^2\\rightarrow \\mathbb{R}^2, (u,v)\\mapsto s(u,v) =\\begin{pmatrix}x(u,v)\\\\y(u,v)\\end{pmatrix}$$\nBeispiel: Re-meshing in pysikalischen Simulation","x":-16494,"y":1280,"width":558,"height":160},
		{"id":"91736f94923716ca","type":"file","file":"Pasted image 20240610215557.png","x":-15778,"y":450,"width":400,"height":162},
		{"id":"00049a0defeb76d6","type":"file","file":"Pasted image 20240610214618.png","x":-16093,"y":803,"width":400,"height":172},
		{"id":"b4c00b9fee6dc92d","type":"file","file":"Pasted image 20240610213513.png","x":-16614,"y":898,"width":399,"height":162},
		{"id":"e91faa28809e9680","type":"file","file":"Pasted image 20240610212819.png","x":-17013,"y":330,"width":399,"height":162},
		{"id":"7ea8dcd9a1dd73b7","type":"text","text":"**Explizite Darstellung der Geometrie**\n- bspw. mittels Punktwolken, CAD Modellen etc.\n\n![[Pasted image 20240610203029.png]]","x":-19771,"y":1180,"width":366,"height":480},
		{"id":"1d0fb03e83bb6100","type":"text","text":"**Explizite Darstellung der Topologie**\n- bspw. mittels Punktmeshes etc.\n\n![[Pasted image 20240610202523.png]]","x":-19246,"y":880,"width":344,"height":448},
		{"id":"b53b8db0627a2ef1","type":"text","text":"##### Topologie vs Geometrie (I)\n\n**Topologie**\n\nBezeichnet eine Menge von Eigenschaften eines Objekts welche sich unter *rigid body body* Transformationen nicht verändern\n\n=> Struktur des Modells\n\nIm Beispiel: Das Polygon hat drei über Kanten verbundene Eckpunkte\n\n**Geometrie**\n\nDie \"Instanz\" der Topologie durch Spezifikation der räumlichen Position (Koordinaten)\n\n=> Die Form des Modells\n\nIm Beispiel: Die Koordinaten der Eckpunkte\n\n**Attribute**\n\nBeispielsweise Farbe, Normalen, Texturen, Transparenz, Materialeigenschaften, etc.","x":-18966,"y":2300,"width":727,"height":520},
		{"id":"efefb4de491024cf","type":"text","text":"##### Topologie vs Geometrie (II)\n\nSowohl Topologie als auch Geometrie können sowohl implizit als auch explizit dargestellt bzw. gespeichert werden.\n\n\n\n\n\n\n\n\n","x":-18799,"y":1773,"width":560,"height":120},
		{"id":"ed26ab1176127e77","type":"text","text":"**Implizite Darstellung der Topologie**\n- bspw. mittels Gitterdaten und Space-Partioning Methoden, etc\n\n![[Pasted image 20240610202908.png]]","x":-18693,"y":881,"width":349,"height":380},
		{"id":"27e92932ca31df99","type":"text","text":"##### (Scattered Data) Interpolation/Approximation\n\nDabei wird eine 1.5-Dimensionale Punktwolke in eine Funktion oder ein Polygon überführt","x":-18602,"y":2962,"width":529,"height":116},
		{"id":"b4a6561ec3a431ec","type":"text","text":"##### Kurveninterpolation/ Approximation\nDabei wird eine 2-Dimensionale Punktsequenz in eine parametrische Kurve oder ein Polygon überführt","x":-18520,"y":3160,"width":447,"height":160},
		{"id":"b8f3b7de2e2f6e30","type":"file","file":"Pasted image 20240610201130.png","x":-19526,"y":2360,"width":383,"height":400},
		{"id":"95c6f3c0b941c1da","type":"text","text":"**Implizite Darstellung der Geometrie**\n- bspw. mittels Skalarfelder, Nullmenge einer gegebenen Funktion, etc. \n\n\n![[Pasted image 20240610203215.png]]","x":-18239,"y":1054,"width":320,"height":413},
		{"id":"556d3d19a1806d62","type":"text","text":"###### 1.5-Dimensional (Funktion)\n(1D-Funktion)\n$$f:\\mathbb{R}\\rightarrow \\mathbb{R},x\\mapsto f(x)=y$$","x":-17252,"y":1330,"width":369,"height":153},
		{"id":"a63fe1ad67441b4c","type":"text","text":"##### Topologie vs Geometrie (III)\n\n**Anmerkung:** Implizite Geometrie schließt implizite Topologie (Gitterdaten) oft mit ein. Dies liegt an der weiten Verbreitung einer Methode namens *\"Marching Cubes\"* welche\n- einfach zu implementieren und\n- relativ robust ist\n\n**Anmerkung:** Manchmal sind Geometrie und Topologie implizit in den Attributen definiert\n- Iso-Linien in einem Druckfeld (Isobars)\n- Iso-Linien in einem Temperaturfeld (Isothermallinien)\n- Iso-Linien in einem Höhenfeld (Konturlinien)\n- Linie des größten Gradientenwerts in einem RGB-Bild auch Kontur oder Silhouette genannt\n- Iso-Oberfläche in einem Stapel von MRI-Grauwert Bildern","x":-17779,"y":1720,"width":540,"height":480},
		{"id":"1ad74502908d5d50","type":"text","text":"##### Topologie vs Geometrie","x":-17692,"y":2560,"width":366,"height":55},
		{"id":"becc50ee89a4aaa5","type":"text","text":"##### Grundlagen","x":-16829,"y":2860,"width":250,"height":60},
		{"id":"58a29a9178e55319","type":"file","file":"Pasted image 20240610205929.png","x":-17268,"y":930,"width":400,"height":260},
		{"id":"9f23dfc83471b047","type":"text","text":"##### Datenkonvertierung\n\nDatenerfassungsmethoden liefern häufig Punktwolken, d.h. eine diskrete Darstellung bzw. Repräsentation des 3D Objektes.\n\nAllerdings ist eine kontinuierliche Darstellung oft besser für die folgenden Post-Processing Schritte geeignet.","x":-17624,"y":3160,"width":385,"height":280},
		{"id":"caf76fa24b94673d","type":"text","text":"##### Scattered Data Interpolation/Approximation\n\nDabei wird eine 2.5-Dimensionale Punktwolke in eine 2D-Funktion überführt","x":-18446,"y":3400,"width":574,"height":160},
		{"id":"0f3097c9d1a945b8","type":"text","text":"##### 3-Dimensional (Fläche)\n\nParametrisierte (Ober-)Flächen mit 2 Parametern, 2-Mannigfaltigkeiten eingebettet in $\\mathbb{R}^3$\n\n$$s:\\mathbb{R}^2\\rightarrow \\mathbb{R}^3, (u,v)\\mapsto s(u,v) = \\begin{pmatrix}x(u,v)\\\\y(u,v)\\\\z(u,v)\\end{pmatrix}$$","x":-15094,"y":1340,"width":738,"height":204},
		{"id":"d60459b27a769311","type":"text","text":"##### 3-Dimensional (Skalarfeld)\n\nSkalarwerte eingebettet in $\\mathbb{R}^3$\n$$S:\\mathbb{R}^3\\rightarrow \\mathbb{R}, (u,v,w)\\mapsto S(u,v,w)=s$$\nBeispiel: CT-, MRI, ultraschall-daten und daraus extrahierte Iso-Oberflächen\n","x":-15239,"y":1600,"width":540,"height":240},
		{"id":"795d5690fd7f6ba3","type":"text","text":"##### 3-Dimensional ($k$d-Vektorfeld)\n\n$k$d-Vektorfeld eingebettet in $\\mathbb{R}^3$\n$$V:\\mathbb{R^3}\\rightarrow \\mathbb{R}^k, (u,v,w)\\mapsto V(u,v,w)=\\begin{pmatrix}x_1(u,v,w)\\\\\\vdots\\\\x_k(u,v,w)\\end{pmatrix}$$\nBeispielsweise FEM-Simulationen, Windkanal etc. (FEM steht für Finite Elemente Methode)","x":-15366,"y":1880,"width":667,"height":280},
		{"id":"894c9f3d0cae29e9","type":"text","text":"##### 3-Dimensional: (Tensorfeld) \nTensorfeld eingebettet in $\\mathbb{R}^3$\n\nBeispielsweise in FEM-Simulationen\n","x":-15454,"y":2200,"width":450,"height":160},
		{"id":"3f3fa8f9b7e4695c","type":"text","text":"##### Dimensionalität der Geometrie","x":-16206,"y":2620,"width":402,"height":65},
		{"id":"df0f3cb7707d6571","type":"file","file":"Pasted image 20240610222141.png","x":-15204,"y":1050,"width":400,"height":162},
		{"id":"f49c1f65adc0697a","type":"text","text":"##### Oberflächenrekonstruktion\n\nDabei wird eine 3D-Punktwolke in eine parametrisierte Oberfläche überführt","x":-18166,"y":3640,"width":387,"height":160},
		{"id":"8ca9c4c04d91c66c","type":"text","text":"##### (Punktwolken) Triangulation\n\n3D-Punktwolke wird in Mesh Überführt","x":-17709,"y":3800,"width":378,"height":160},
		{"id":"1aaaa10a45778592","type":"text","text":"##### Grundlagen: Mesh\n\nIn Meshbasierter Modellierung werden Objekte als Mesh (Netz) von Punkten repräsentiert bzw. dargestellt.\n\n**Vorteil:**\n- Nachbarschaftsbeziehungen sind implizit im Mesh kodiert\n\nEin solches Mesh $\\mathcal{M}=(\\mathcal{V},\\mathcal{E},\\mathcal{F})$ besteht aus:\n- Einer Menge $\\mathcal{V}$ von $n_V$ Ecken, welche jeweils die Punktinformationen (Koordinaten, Attribute, etc.) beinhalten.\n- Einer Menge $\\mathcal{E}$ von $n_E$ Kanten, welche jeweils zwei Ecken verbinden.\n- Einer Menge $\\mathcal{F}$ von $n_F$ Flächen, d.h. eine zyklische Kette von Kanten, welche keine Ecken einschließen","x":-12380,"y":-80,"width":480,"height":540},
		{"id":"4a4f4a565950d22e","type":"text","text":"##### Mesh Typen\n\nWir unterscheiden zwischen *regulären* und *irregulären* Meshes\n","x":-12760,"y":560,"width":250,"height":154},
		{"id":"44fecb383aa48720","type":"text","text":"##### Mesh Typen (Regulär)\n\n1. Reguläres viereckiges Mesh  ![[Pasted image 20240616202423.png]]\n2. Reguläres dreieckiges Mesh  ![[Pasted image 20240616202501.png]]\n  3. Reguläres sechseckiges Mesh\n    ![[Pasted image 20240616202604.png]]","x":-13340,"y":1040,"width":362,"height":840},
		{"id":"5eafbfa1f3eb0ebb","type":"text","text":"##### Irreguläre Meshes\n\n4. Irreguläres viereckiges Mesh![[Pasted image 20240616203247.png]]\n\n5. Irreguläres dreickiges Mesh ![[Pasted image 20240616203336.png]]\n\n6. Irreguläres sechseckiges Mesh![[Pasted image 20240616203544.png]]\n7. Generelles Polygonales Mesh\n   ![[Pasted image 20240616203658.png]]","x":-12885,"y":1040,"width":345,"height":960},
		{"id":"a5e3f3878b757662","type":"text","text":"#### Meshbasierte Verarbeitungsziele\n\n- Re-meshing: lokale/globale Operation\n\t- Verbessern der Form von dreiecken und der allgemeinen Qualität des Meshes\n- Dezimierung: globale Operation\n\t- Reduzieren der Meshkomplexität\n- Glättung: lokale Operation\n\t- Entfernung von Fehlern oder Noise\n- Fairing: globale Operation\n\t- Vereinfachen der Form eines Meshes um die einfachste Form zu erhalten\n- Sonstige:\n\t- Parametrisierung\n\t- Defomation\n\t- Boolsche Operationen etc.","x":-13808,"y":-41,"width":468,"height":460},
		{"id":"568e10056b6c794e","type":"file","file":"Pasted image 20240616202036.png","x":-14388,"y":-14,"width":236,"height":87},
		{"id":"e57eb40d774d3446","type":"file","file":"Pasted image 20240616201957.png","x":-14352,"y":-201,"width":200,"height":120},
		{"id":"0c6901d0e6e08711","type":"file","file":"Pasted image 20240616202140.png","x":-14337,"y":139,"width":185,"height":103},
		{"id":"b318e7b7024fa144","type":"file","file":"Pasted image 20240616202231.png","x":-14372,"y":299,"width":220,"height":73},
		{"id":"68a90224c97e0f9c","type":"file","file":"Pasted image 20240616175827.png","x":-12760,"y":-680,"width":264,"height":280},
		{"id":"048d42d162cb2530","type":"file","file":"Pasted image 20240616175740.png","x":-11900,"y":-680,"width":300,"height":297},
		{"id":"3669591720c2d166","type":"file","file":"Pasted image 20240616212236.png","x":-10560,"y":-320,"width":204,"height":176},
		{"id":"7aec9accab92825b","type":"file","file":"Pasted image 20240616212417.png","x":-10552,"y":-80,"width":196,"height":169},
		{"id":"865a741a2fafad25","type":"file","file":"Pasted image 20240616212511.png","x":-10552,"y":140,"width":198,"height":171},
		{"id":"70a9ec3e1a3cb70e","type":"text","text":"##### Topologie","x":-10015,"y":632,"width":250,"height":60},
		{"id":"dce1402e12d94576","type":"text","text":"##### Topologische Operatoren\n\n- **Vertex-removal** vs **Verstex-insertion**\n  ![[Pasted image 20240617143222.png]]\n- **Edge-collapse** vs **vertex-split**\n  ![[Pasted image 20240617143355.png]]\n- **Edge-flip** vs **edge-flip**\n  ![[Pasted image 20240617143634.png]]\n- **Edge-split** (vs. **vertex-removal**)\n  ![[Pasted image 20240617143727.png]]","x":-10063,"y":-1680,"width":690,"height":1000},
		{"id":"6696f18c1f97c6bb","type":"text","text":"##### Lokale Nachbarschaft (Definitionen)\n\n- $1-$ring $\\mathcal{N}_1(v)$ (auch 1-Nachbarschaft):\n\t- Alle Kantenbenachbarten Nachbarecken einer Ecke $v$\n\t\t- *Valence:* Anzahl von Ecken im 1-ring\n\t- Rekursive Definition von $2-$ring, $3-$ring, etc.\n- $1-$fan $\\mathcal{F}_1(v)$: \n\t- Alle unmittelbar zu $v$ benachbarten Flächen\n- $1-$star $\\mathcal{S}_1(v)$: \n\t- Alle von $v$ ausgehenden Kanten","x":-11273,"y":-108,"width":547,"height":308},
		{"id":"1e0a3537f286cf86","type":"text","text":"##### 4. 3D Datenrepräsentation","x":-12640,"y":4080,"width":314,"height":60},
		{"id":"5f30b1e82d3a6215","type":"text","text":"##### Operationen und Operatoren","x":-9337,"y":19,"width":250,"height":101},
		{"id":"0e822393eb8c1c5d","type":"text","text":"##### Kopplung von Topologie und Geometrie bei einem Kantenkollaps\n![[Pasted image 20240617144259.png]]\n\nIm Falle von topologischen Operationen überprüfe auch immer die geometrische Plausibilität\n\nOft sind topologische und geometrische Operationen gekoppelt","x":-10102,"y":-2520,"width":768,"height":480},
		{"id":"b003ec717fe928a7","type":"text","text":"##### Geometrische Operatoren\n\n- **Vertex-shift**![[Pasted image 20240617144708.png]]\n\n- **Half-edge-collapse** vs. **restricted vertex split**![[Pasted image 20240617144813.png]]","x":-8560,"y":-1680,"width":644,"height":560},
		{"id":"7f907682360d9161","type":"text","text":"##### Kombinatorische Operatoren\n\n- Vertex basiert:\n\t- Alle benachbarten Ecken/Knoten/Vertices aufzählen auch $1-$ring genannt\n\t- Alle von einem vertex ausgehende Kanten aufzählen auch $1-$star genannt\n\t- Alle benachbarten Flächen aufzählen, auch $1-$fan gennant\n- Kanten basiert:\n\t- Start- und End-vertex auflisten\n\t- Auflisten von Vorgänger und Nachfolgerkante in benachbarten Flächen\n\t- Auflisten benachbarter Flächen\n- Flächen basiert:\n\t- Auflisten aller benachbarten Vertices (Polygonecken)\n\t- Auflisten aller Randkanten\n\t- Auflisten aller benachbarten Flächen","x":-8320,"y":-760,"width":700,"height":400},
		{"id":"6f5b37cbe394e1f8","type":"file","file":"Pasted image 20240617142508.png","x":-7160,"y":412,"width":400,"height":208},
		{"id":"24c84acaf5002970","type":"file","file":"Pasted image 20240617142648.png","x":-7160,"y":673,"width":400,"height":259},
		{"id":"0d60a728235ac6f0","type":"text","text":"##### Topologie (I)\n\n2-Mannigfaltigkeit (Fläche): Jede Ecke hat einen $1-$fan, welcher *homomorph* zu einer Scheibe ist.\n- *homomorph*: Es existiert eine kontinuierliche, bijektive Abbildung.\n- Es handelt sich um einen Begriff aus der *lokalen Topologie*\n\n2-Mannigfaltigkeit mit Rand: homomorph zu einer zu einer Halbscheibe\n\nEs existieren keine Singularitäten\n\n$3-$Mannigfaltigkeiten (Volumen, Festkörper) etc. analog\n","x":-9373,"y":492,"width":604,"height":340},
		{"id":"f51570c0241b99db","type":"text","text":"##### Topologie (2)\n\nDie globale Topologie einer jeden Mannigfaltigkeit bestimmt sich durch eine kleine Anzahl charakteristischer Zahlen (*nof = number of*):\n- Fläche: nof components $c$ + nof holes $g$ + nof boundaries $b$\n- Festkörper: nof components + nof tunnel + nof bubbles + nof boundaries\n\n2-Mannigfaltige Meshes (Euler): $n_V - n_E + n_F = 2(c-g)-b =: \\mathcal{X}$\n- $g$ = genus (max. Anzahl von Schnitten ohne die Verbundenheit der Geometrie nicht zerstören)\n- $\\mathcal{X}$ = Eulercharakteristik\n\t- Dies ist die Verbindung zwischen lokaler und globaler Topologie für Meshes\n\t\n![[Pasted image 20240617142324.png]]","x":-8520,"y":382,"width":652,"height":560},
		{"id":"48ef4bcfa044a6d9","type":"file","file":"Pasted image 20240617140621.png","x":-8923,"y":1000,"width":154,"height":128},
		{"id":"85a42a08bc7753a3","type":"file","file":"Pasted image 20240617140532.png","x":-9402,"y":1000,"width":172,"height":128},
		{"id":"ea3647ac99f5d00e","type":"file","file":"Pasted image 20240617140601.png","x":-9148,"y":1000,"width":154,"height":128},
		{"id":"b862612d4093606f","type":"file","file":"Pasted image 20240617152221.png","x":-11320,"y":2960,"width":400,"height":90},
		{"id":"a788af457eb96d33","type":"file","file":"Pasted image 20240617152154.png","x":-11320,"y":3125,"width":399,"height":154},
		{"id":"2ba4532d230730e4","type":"file","file":"Pasted image 20240617152132.png","x":-11320,"y":3358,"width":400,"height":69},
		{"id":"f4ab1a187ef9d3fa","type":"text","text":"##### Effiziente Implementierung für versch. Operationen","x":-11880,"y":3005,"width":320,"height":80},
		{"id":"7115df57d4c0b7a8","type":"text","text":"##### Half-edge Datenstruktur\n\nJede Kante wird in ein Paar von halbkanten gesplittet\n\n![[Pasted image 20240617151820.png]]\n\n**Implementierungshinweis:**\n- Pointer sollten als indizes realisiert werden um die effizienz zu erhöhen.\n  ","x":-11992,"y":2080,"width":545,"height":678},
		{"id":"5179646cf221f995","type":"text","text":"##### Mesh Datenstrukturen","x":-12000,"y":880,"width":283,"height":56},
		{"id":"1d6fd132361ce06c","type":"text","text":"##### Halbkanten (Half-edge) Datenstruktur\n\nEin Mesh wird gespeichert als:\n- Winged-Edge Datenstruktur (für 2-Mannigfaltigkeiten)\n- Half-Edge Datenstruktur (für 2-Mannigfaltigkeiten)\n- Directed-Edge (für 2-Mannigfaltigkeiten)\n- Quad-Edge (für 2-Mannigfaltigkeiten)\n- combinatoral-map Datenstruktur (2-Mannigfaltigkeiten)\n- Radial-Edge Datenstruktur\n- Feather Datenstruktur\n- etc.","x":-11800,"y":1320,"width":598,"height":380},
		{"id":"42cd539c6f2a6f5f","type":"file","file":"Pasted image 20240617160917.png","x":-10760,"y":1064,"width":280,"height":265},
		{"id":"05c49011b9f9d76f","type":"text","text":"##### Half-edge Datenstruktur (für Meshes mit Rand)\n\nDie gegenüberliegende Half-Edge oder eine Half-Edge am Rand ist undefiniert oder *null* oder negativ oder ...\n\n\nDie Ausgehende Half-Edge in einem Vertex der auf dem Rand liegt muss \"right-hinged\" sein","x":-10600,"y":1600,"width":576,"height":198},
		{"id":"1a59a0bacbb52925","type":"file","file":"Pasted image 20240617160935.png","x":-10120,"y":1064,"width":280,"height":265},
		{"id":"652fbcc946c9b731","type":"text","text":"##### Beispieloperation\n\nEnumeriere den $1-$ring für einen Vertex *vtx* und wende auf jeden Vertex des Rings eine Funktion *func* an.\n\n![[Pasted image 20240618041901.png]]\n","x":-10360,"y":2069,"width":600,"height":371},
		{"id":"cd4831834fae5926","type":"text","text":"##### Directed-Edge Datenstruktur\n\nFür dreieckige Meshes kann die Half-Edge Datenstruktur mittels Indizes und der folgenden Regeln spezialisiert werden\n\n- Für eine Fläche mit Index $f$, sind die Indizes der 3 Half-Edges\n\t- *half_edge($f$)* = $3f+i$, $i= 0,1,2.$\n- Für eine Half-Edge mit Index $h$, sind der Index der Fläche und der Index innerhalb der Fläche\n\t- *face($h$)* = $h/3$\n\t- *face_index($h$)* = $h\\mod 3$ \n- Für eine Half-Edge mit Index $h$, ist der Index der nächsten Half-Edge innerhalb der Fläche\n\t- *next_half_edge($h$)* = $(h+1) \\mod 3$","x":-9500,"y":1500,"width":600,"height":400},
		{"id":"fadebf8178397898","type":"file","file":"Pasted image 20240618044554.png","x":-8660,"y":1826,"width":398,"height":93},
		{"id":"b62e964d4070643a","type":"file","file":"Pasted image 20240618044612.png","x":-8660,"y":1640,"width":399,"height":116},
		{"id":"4542caddb8d01d99","type":"file","file":"Pasted image 20240618044646.png","x":-8660,"y":1460,"width":399,"height":116},
		{"id":"a0ed8195263dd632","type":"text","text":"##### Speicherverbrauch\n\n16 bytes/Vertex\n8 bytes/Half-Edge","x":-9363,"y":2080,"width":327,"height":120},
		{"id":"0160187acbc4f3c9","type":"text","text":"##### Fragen","x":-10378,"y":4358,"width":250,"height":60},
		{"id":"c197011daacb279f","type":"text","text":"##### Was ist der Unterschied zwischen Topologie und Geometrie?","x":-10713,"y":4564,"width":213,"height":176},
		{"id":"3f2ee2ad12e8b06d","type":"text","text":"##### Was ist ein Octree und was sind seine Vor- und Nachteile?","x":-9678,"y":4562,"width":198,"height":178},
		{"id":"facc3e5ac7fc1172","type":"text","text":"##### Was ist ein bsp-Tree und wie bekommt man die Splitting-Planes?","x":-10738,"y":3980,"width":278,"height":131},
		{"id":"5703a6bed958da7a","type":"text","text":"##### Was ist ein $kd$-Tree und wie wird dieser bzw. seine Konstruktion effizient Implementiert?","x":-9720,"y":4180,"width":312,"height":142},
		{"id":"fe7e748d626e2958","type":"text","text":"##### Wo wurden innerhalb der Vorlesung Space-Partitioning Strategien eingesetzt?","x":-10368,"y":4564,"width":268,"height":156},
		{"id":"473437eae3e766aa","type":"text","text":"##### Was ist ein Edge-collapse?","x":-10378,"y":3986,"width":218,"height":94},
		{"id":"d6509a47307c7d9c","type":"text","text":"##### Was sind Half-Edge und Directed-Edge Datenstrukturen und wie unterscheiden sich diese?","x":-10061,"y":3960,"width":250,"height":187}
	],
	"edges":[
		{"id":"4fce12189ecb7ca8","fromNode":"e518224dbd268545","fromSide":"top","toNode":"55783365771747b0","toSide":"bottom","label":"Kapitel 1"},
		{"id":"ab9bc8d29f06ce2e","fromNode":"e518224dbd268545","fromSide":"bottom","toNode":"cd7546560bcb1a36","toSide":"left","label":"Kapitel 3"},
		{"id":"66f368d498cbb8d6","fromNode":"e518224dbd268545","fromSide":"top","toNode":"eae094def1b7026d","toSide":"right","label":"Kapitel 5"},
		{"id":"0761574fba2cebc9","fromNode":"e518224dbd268545","fromSide":"top","toNode":"a417f3fcce0aa3fb","toSide":"bottom","label":"Kapitel 6"},
		{"id":"40bb8ed2351de01b","fromNode":"e518224dbd268545","fromSide":"top","toNode":"47c703570da7cf0c","toSide":"bottom","label":"Kapitel 7"},
		{"id":"094dd10fc145fd18","fromNode":"55783365771747b0","fromSide":"top","toNode":"5884d49c26bd3758","toSide":"right","label":"Schritt 1"},
		{"id":"fb6631ad89401ec6","fromNode":"55783365771747b0","fromSide":"top","toNode":"f5d2f32c167d0b96","toSide":"right","label":"Schritt 2"},
		{"id":"2e14c80d38534813","fromNode":"55783365771747b0","fromSide":"top","toNode":"baea3521d44ce1dc","toSide":"right","label":"Schritt 3"},
		{"id":"11d6ae45016998fe","fromNode":"55783365771747b0","fromSide":"top","toNode":"585fa46d8eddf8e4","toSide":"bottom","label":"Schritt 4"},
		{"id":"4b68c337c7164ed4","fromNode":"55783365771747b0","fromSide":"top","toNode":"d8442a97862cfc5d","toSide":"bottom","label":"Schritt 5"},
		{"id":"9a3a2f843fe5f468","fromNode":"55783365771747b0","fromSide":"top","toNode":"5ef2e91be67827da","toSide":"left","label":"Schritt 6"},
		{"id":"cfd5da0442c4fb85","fromNode":"55783365771747b0","fromSide":"top","toNode":"42e965c2fcbe3f36","toSide":"left","label":"Schritt 7"},
		{"id":"ea9a788367d6b214","fromNode":"55783365771747b0","fromSide":"top","toNode":"2045e749b4d3653a","toSide":"left","label":"Schritt 8"},
		{"id":"3de5a8288598a5cc","fromNode":"55783365771747b0","fromSide":"right","toNode":"7e438dcab5c8a040","toSide":"left","label":"Pipeline"},
		{"id":"09fcce6f185c07a3","fromNode":"cd7546560bcb1a36","fromSide":"top","toNode":"3a0e0dfb54dff6ad","toSide":"bottom","label":"Taxonomie verschiedener Datenerfassungsverfahren"},
		{"id":"e68cb214f0582c1d","fromNode":"cd7546560bcb1a36","fromSide":"top","toNode":"7529049661febfbf","toSide":"bottom","label":"Genauigkeitsskala gängiger Technologien (zum Teil veraltet)"},
		{"id":"f4ac80abee9c2f09","fromNode":"cd7546560bcb1a36","fromSide":"top","toNode":"dafab85b84c725e5","toSide":"bottom"},
		{"id":"bc92d60e029dddea","fromNode":"cd7546560bcb1a36","fromSide":"right","toNode":"eea32372492d13af","toSide":"left"},
		{"id":"f453c2c395f09649","fromNode":"b32099d5228a6b89","fromSide":"left","toNode":"1cb6c915ac48b417","toSide":"right"},
		{"id":"7d1cd94a0e233b3e","fromNode":"b225c78a261d5d2c","fromSide":"bottom","toNode":"082bad1ca8b2c1f1","toSide":"top","label":"Mehrfache Ultraschallmessungen"},
		{"id":"d9c56327061250be","fromNode":"082bad1ca8b2c1f1","fromSide":"right","toNode":"84b864b55f7b6355","toSide":"left"},
		{"id":"ed57a5d57f60e178","fromNode":"84b864b55f7b6355","fromSide":"left","toNode":"082bad1ca8b2c1f1","toSide":"right"},
		{"id":"7b313cbe2bdf1dec","fromNode":"4d915619257c17b9","fromSide":"top","toNode":"082bad1ca8b2c1f1","toSide":"bottom"},
		{"id":"9f4c60e920f74c87","fromNode":"4d915619257c17b9","fromSide":"top","toNode":"84b864b55f7b6355","toSide":"bottom"},
		{"id":"9b6cef4d06305cb5","fromNode":"eea32372492d13af","fromSide":"top","toNode":"1cb6c915ac48b417","toSide":"bottom","label":"Kombination aus CMM & Triangulation"},
		{"id":"34f409b1c21a6f5d","fromNode":"8fa99c395f4ddae1","fromSide":"right","toNode":"15e5a0452bd18f12","toSide":"left"},
		{"id":"09e8c9b5a200d4ee","fromNode":"15e5a0452bd18f12","fromSide":"left","toNode":"8fa99c395f4ddae1","toSide":"right"},
		{"id":"6332d2fd6774ef45","fromNode":"1130301b714ce46f","fromSide":"left","toNode":"8fa99c395f4ddae1","toSide":"right"},
		{"id":"279706949c7a6cf0","fromNode":"b225c78a261d5d2c","fromSide":"top","toNode":"8fa99c395f4ddae1","toSide":"left","label":"MRI"},
		{"id":"cf26afea8f939f09","fromNode":"b225c78a261d5d2c","fromSide":"right","toNode":"81d3c45f2d409a3d","toSide":"left","label":"CT"},
		{"id":"6109a7ff11337494","fromNode":"81d3c45f2d409a3d","fromSide":"right","toNode":"59664a6ab5cbbb53","toSide":"left"},
		{"id":"d5584be7211219ca","fromNode":"59664a6ab5cbbb53","fromSide":"left","toNode":"81d3c45f2d409a3d","toSide":"right"},
		{"id":"0ad08f6d516ee271","fromNode":"81d3c45f2d409a3d","fromSide":"right","toNode":"16e93542d429205d","toSide":"left"},
		{"id":"e80e078ddc964c4c","fromNode":"81d3c45f2d409a3d","fromSide":"bottom","toNode":"3401990b3896e4e9","toSide":"top"},
		{"id":"38b906543a11cce4","fromNode":"3401990b3896e4e9","fromSide":"top","toNode":"81d3c45f2d409a3d","toSide":"bottom"},
		{"id":"98604fba0927a08c","fromNode":"59664a6ab5cbbb53","fromSide":"right","toNode":"5af415d1551cc988","toSide":"left"},
		{"id":"69f5fb08d2795976","fromNode":"16e93542d429205d","fromSide":"right","toNode":"5af415d1551cc988","toSide":"left"},
		{"id":"73053fe8f11cb3f8","fromNode":"3401990b3896e4e9","fromSide":"right","toNode":"5af415d1551cc988","toSide":"left"},
		{"id":"83806704a1c9c542","fromNode":"5af415d1551cc988","fromSide":"left","toNode":"3401990b3896e4e9","toSide":"right"},
		{"id":"ba980a9c560d1b09","fromNode":"5af415d1551cc988","fromSide":"left","toNode":"16e93542d429205d","toSide":"right"},
		{"id":"73cae1d2358b87dc","fromNode":"5af415d1551cc988","fromSide":"left","toNode":"59664a6ab5cbbb53","toSide":"right"},
		{"id":"84cef89db1fa4ed6","fromNode":"15e5a0452bd18f12","fromSide":"right","toNode":"96562fe10b5bd099","toSide":"left"},
		{"id":"29a382a5f81b0bcd","fromNode":"1130301b714ce46f","fromSide":"right","toNode":"96562fe10b5bd099","toSide":"left"},
		{"id":"553b55b3748a5805","fromNode":"96562fe10b5bd099","fromSide":"left","toNode":"15e5a0452bd18f12","toSide":"right"},
		{"id":"57a03dd09ac82cfd","fromNode":"96562fe10b5bd099","fromSide":"left","toNode":"1130301b714ce46f","toSide":"right"},
		{"id":"247c9a4d66850e82","fromNode":"eea32372492d13af","fromSide":"right","toNode":"b225c78a261d5d2c","toSide":"left"},
		{"id":"5d68762aa1897d1c","fromNode":"6921ffae7b19de13","fromSide":"right","toNode":"3ba2d98051f0cc2f","toSide":"left"},
		{"id":"143cc60d1010be00","fromNode":"3ba2d98051f0cc2f","fromSide":"left","toNode":"6921ffae7b19de13","toSide":"right"},
		{"id":"253b52f7bb23255b","fromNode":"eea32372492d13af","fromSide":"bottom","toNode":"6921ffae7b19de13","toSide":"left","label":"Kombination aus 2 Stereokameras, LIDAR, IMU + GPS, Radar (Multimodaler Sensoraufbau zum Zwecke der Objekterkennung)"},
		{"id":"97812bace57a1a65","fromNode":"7dbebbc236ac577f","fromSide":"top","toNode":"6921ffae7b19de13","toSide":"bottom"},
		{"id":"eeb74659ed629408","fromNode":"6921ffae7b19de13","fromSide":"bottom","toNode":"7dbebbc236ac577f","toSide":"top"},
		{"id":"68866256414cebcf","fromNode":"e518224dbd268545","fromSide":"right","toNode":"c6b5f6409acc5b50","toSide":"bottom","label":"Kapitel 2"},
		{"id":"978c2d68eaa22277","fromNode":"a1641c64b669e006","fromSide":"left","toNode":"af047f0c28eca829","toSide":"right"},
		{"id":"e6fd9d0e422becc7","fromNode":"af047f0c28eca829","fromSide":"right","toNode":"a1641c64b669e006","toSide":"left"},
		{"id":"a3915b7492590022","fromNode":"eea32372492d13af","fromSide":"bottom","toNode":"af047f0c28eca829","toSide":"left","label":"Kombination aus Accelerometer, Gyroskop, Magnetometer, 2 ToF Kameras"},
		{"id":"d986b4ca24c3e979","fromNode":"1cb6c915ac48b417","fromSide":"right","toNode":"b32099d5228a6b89","toSide":"left"},
		{"id":"ce45f74635bb3b2c","fromNode":"eea32372492d13af","fromSide":"top","toNode":"0b66d29e0c4a9d67","toSide":"left","label":"Kombination aus Infrarot-Tracker + (Laser-) Triangulation"},
		{"id":"ceba82b2b0becf6a","fromNode":"ef11cb481f789e1b","fromSide":"top","toNode":"0b66d29e0c4a9d67","toSide":"bottom"},
		{"id":"bc19f8dc9d063ea1","fromNode":"0b66d29e0c4a9d67","fromSide":"bottom","toNode":"ef11cb481f789e1b","toSide":"top"},
		{"id":"896e6f9d55a6f996","fromNode":"cd7546560bcb1a36","fromSide":"bottom","toNode":"1a6e0779c332c94a","toSide":"top"},
		{"id":"384409d3923fb36e","fromNode":"1a6e0779c332c94a","fromSide":"bottom","toNode":"58fdace7e7abafad","toSide":"top"},
		{"id":"8f94ced7b8945297","fromNode":"58fdace7e7abafad","fromSide":"bottom","toNode":"edee9d4f7dfdf560","toSide":"top","label":"Definition: Diskrepanzen"},
		{"id":"f5e036c4fe93f875","fromNode":"edee9d4f7dfdf560","fromSide":"bottom","toNode":"4e28ba98d75d8fa8","toSide":"top"},
		{"id":"6bde48782ee88f35","fromNode":"4e28ba98d75d8fa8","fromSide":"bottom","toNode":"625541f4e16d3bca","toSide":"top"},
		{"id":"da6c27e277a2cdf7","fromNode":"edee9d4f7dfdf560","fromSide":"bottom","toNode":"f4abf0a4c04c6258","toSide":"top"},
		{"id":"f612583e26a0294b","fromNode":"f4abf0a4c04c6258","fromSide":"bottom","toNode":"ec9b12e667562793","toSide":"top"},
		{"id":"c7ff74a64c193b4f","fromNode":"edee9d4f7dfdf560","fromSide":"right","toNode":"60d354697dc03259","toSide":"left"},
		{"id":"8ebf5f5c988d0ba1","fromNode":"60d354697dc03259","fromSide":"right","toNode":"9f27a66eb775f3c7","toSide":"left"},
		{"id":"35c669ff66cddd52","fromNode":"edee9d4f7dfdf560","fromSide":"right","toNode":"f3783658e54ad5cf","toSide":"left"},
		{"id":"cd98c01d13050498","fromNode":"edee9d4f7dfdf560","fromSide":"right","toNode":"b59ca6d0d410f5fd","toSide":"left"},
		{"id":"7996186f421e11a3","fromNode":"b59ca6d0d410f5fd","fromSide":"right","toNode":"efbc5ef093ef8e2a","toSide":"left"},
		{"id":"ad0f7705d76d8f0b","fromNode":"58fdace7e7abafad","fromSide":"bottom","toNode":"485dc666aa19975d","toSide":"top","label":"Stereo Vision"},
		{"id":"51aa2c7e14f4b0fe","fromNode":"485dc666aa19975d","fromSide":"right","toNode":"9685dacf6603ae8d","toSide":"top"},
		{"id":"04250514ad7ebd59","fromNode":"485dc666aa19975d","fromSide":"bottom","toNode":"5a5c812363b1a10c","toSide":"top"},
		{"id":"147d5e1ad54f9031","fromNode":"5a5c812363b1a10c","fromSide":"right","toNode":"33502ba2ff04387c","toSide":"left"},
		{"id":"1321b623fa71c45b","fromNode":"5a5c812363b1a10c","fromSide":"bottom","toNode":"ab1d39b5cea0a446","toSide":"top"},
		{"id":"0bfb896afd2baecd","fromNode":"ab1d39b5cea0a446","fromSide":"bottom","toNode":"d39205fcf402a982","toSide":"top"},
		{"id":"dc98bbe76093ec1d","fromNode":"5a5c812363b1a10c","fromSide":"bottom","toNode":"de06d70d38f9946a","toSide":"top","label":"Fehlerberechnung"},
		{"id":"a78c201c18351bf0","fromNode":"de06d70d38f9946a","fromSide":"bottom","toNode":"44086213b530dbe1","toSide":"top"},
		{"id":"bfdbb53d3e1ce0d2","fromNode":"44086213b530dbe1","fromSide":"bottom","toNode":"bb772d7982d9dc4e","toSide":"top"},
		{"id":"1a4f6b1c2f714bea","fromNode":"bb772d7982d9dc4e","fromSide":"bottom","toNode":"c4f74c0d9bb860d8","toSide":"top"},
		{"id":"353f1fe48f2cc7d5","fromNode":"c4f74c0d9bb860d8","fromSide":"right","toNode":"1630559b1dc6581b","toSide":"left"},
		{"id":"430f90fd3606a096","fromNode":"ab1d39b5cea0a446","fromSide":"bottom","toNode":"483180eed1a3f7db","toSide":"top","label":"Allgemeiner Fall"},
		{"id":"54fcfc5299f8056e","fromNode":"58fdace7e7abafad","fromSide":"bottom","toNode":"a31a68b6d78da85f","toSide":"top","label":"Laser Scanning"},
		{"id":"59b80702064334c6","fromNode":"a31a68b6d78da85f","fromSide":"bottom","toNode":"a74a3e436ad7b132","toSide":"top","label":"Vgl. Stereo Vision und Laser Scanning"},
		{"id":"d8fcbf94a4147c86","fromNode":"a31a68b6d78da85f","fromSide":"bottom","toNode":"ef633807dd7e7188","toSide":"top"},
		{"id":"15d05c19c2903705","fromNode":"ef633807dd7e7188","fromSide":"bottom","toNode":"e1fc014ff0245766","toSide":"top"},
		{"id":"968fbd2e717dcb1e","fromNode":"cd7546560bcb1a36","fromSide":"bottom","toNode":"00d8bcee224d4edb","toSide":"top","label":"Fragen"},
		{"id":"98160fb56ed60408","fromNode":"00d8bcee224d4edb","fromSide":"bottom","toNode":"0b24fb528c1bb046","toSide":"top"},
		{"id":"181b8d4875eb4e2e","fromNode":"00d8bcee224d4edb","fromSide":"bottom","toNode":"164913fde9454aa3","toSide":"top"},
		{"id":"c4308382c2bbe665","fromNode":"00d8bcee224d4edb","fromSide":"bottom","toNode":"ac33c07d9e42bf5b","toSide":"left"},
		{"id":"10a1a1dcf230d3fc","fromNode":"00d8bcee224d4edb","fromSide":"bottom","toNode":"f0f4c552dbbe3c02","toSide":"top"},
		{"id":"c11679dac0a8c8ee","fromNode":"00d8bcee224d4edb","fromSide":"bottom","toNode":"98859240b38018e3","toSide":"top"},
		{"id":"d0eb7573a942ef62","fromNode":"00d8bcee224d4edb","fromSide":"bottom","toNode":"a15257c7c56f30f0","toSide":"top"},
		{"id":"67114bd8c0d8054c","fromNode":"00d8bcee224d4edb","fromSide":"bottom","toNode":"7d419d4db4b2634c","toSide":"top"},
		{"id":"7ab83c60fd6b0329","fromNode":"e518224dbd268545","fromSide":"bottom","toNode":"1e0a3537f286cf86","toSide":"right","label":"Kapitel 4"},
		{"id":"232476bbe982b003","fromNode":"1e0a3537f286cf86","fromSide":"top","toNode":"becc50ee89a4aaa5","toSide":"bottom","label":"Grundlagen"},
		{"id":"88e545c61ece9d47","fromNode":"becc50ee89a4aaa5","fromSide":"top","toNode":"1ad74502908d5d50","toSide":"bottom","label":"Topologie vs Geometrie"},
		{"id":"7f09229a2bd5759a","fromNode":"1ad74502908d5d50","fromSide":"top","toNode":"b53b8db0627a2ef1","toSide":"right"},
		{"id":"592946cc1abede9f","fromNode":"b53b8db0627a2ef1","fromSide":"left","toNode":"b8f3b7de2e2f6e30","toSide":"right"},
		{"id":"92311d2f36981181","fromNode":"1ad74502908d5d50","fromSide":"top","toNode":"efefb4de491024cf","toSide":"bottom"},
		{"id":"bbb17f73d38e2166","fromNode":"efefb4de491024cf","fromSide":"top","toNode":"95c6f3c0b941c1da","toSide":"bottom"},
		{"id":"3beeea45640fc002","fromNode":"efefb4de491024cf","fromSide":"top","toNode":"7ea8dcd9a1dd73b7","toSide":"bottom"},
		{"id":"83d4f5044ace4ccc","fromNode":"efefb4de491024cf","fromSide":"top","toNode":"1d0fb03e83bb6100","toSide":"bottom"},
		{"id":"495be9bad17141df","fromNode":"efefb4de491024cf","fromSide":"top","toNode":"ed26ab1176127e77","toSide":"bottom"},
		{"id":"3807a3a8e651dd57","fromNode":"1ad74502908d5d50","fromSide":"top","toNode":"a63fe1ad67441b4c","toSide":"bottom"},
		{"id":"2c0ff756ed396ae0","fromNode":"becc50ee89a4aaa5","fromSide":"top","toNode":"3f3fa8f9b7e4695c","toSide":"left","label":"Dimensionalität von Geometrie"},
		{"id":"0e502925628fd034","fromNode":"3f3fa8f9b7e4695c","fromSide":"top","toNode":"556d3d19a1806d62","toSide":"bottom"},
		{"id":"e39f9c72a6a2b99c","fromNode":"556d3d19a1806d62","fromSide":"top","toNode":"58a29a9178e55319","toSide":"bottom"},
		{"id":"e96e06c846cee8e3","fromNode":"3f3fa8f9b7e4695c","fromSide":"top","toNode":"0a0d0ae811032bed","toSide":"bottom"},
		{"id":"6628dfb3b90bb076","fromNode":"0a0d0ae811032bed","fromSide":"top","toNode":"e91faa28809e9680","toSide":"bottom"},
		{"id":"17799c7cd287213b","fromNode":"3f3fa8f9b7e4695c","fromSide":"top","toNode":"20c1517bf7af8aef","toSide":"bottom"},
		{"id":"69e46679a877a868","fromNode":"20c1517bf7af8aef","fromSide":"top","toNode":"b4c00b9fee6dc92d","toSide":"bottom"},
		{"id":"ba286f363dca3f09","fromNode":"3f3fa8f9b7e4695c","fromSide":"top","toNode":"3c7d662acff45cd3","toSide":"bottom"},
		{"id":"cd2dd8d4778115cd","fromNode":"3c7d662acff45cd3","fromSide":"top","toNode":"00049a0defeb76d6","toSide":"bottom"},
		{"id":"2f26f6618b28c9f1","fromNode":"3f3fa8f9b7e4695c","fromSide":"top","toNode":"ec1efdf3cac058fb","toSide":"bottom"},
		{"id":"6dd66dc52cc6aebb","fromNode":"ec1efdf3cac058fb","fromSide":"top","toNode":"91736f94923716ca","toSide":"bottom"},
		{"id":"09d83c3e1a17256c","fromNode":"3f3fa8f9b7e4695c","fromSide":"top","toNode":"0f3097c9d1a945b8","toSide":"left"},
		{"id":"ebb66e4ff4336d3e","fromNode":"0f3097c9d1a945b8","fromSide":"top","toNode":"df0f3cb7707d6571","toSide":"bottom"},
		{"id":"c5788e86040b46fa","fromNode":"3f3fa8f9b7e4695c","fromSide":"top","toNode":"d60459b27a769311","toSide":"left"},
		{"id":"d914f55970b5d14c","fromNode":"3f3fa8f9b7e4695c","fromSide":"top","toNode":"795d5690fd7f6ba3","toSide":"left"},
		{"id":"154bf2284f3847ac","fromNode":"3f3fa8f9b7e4695c","fromSide":"top","toNode":"894c9f3d0cae29e9","toSide":"left"},
		{"id":"901a0d8eb1916f56","fromNode":"becc50ee89a4aaa5","fromSide":"left","toNode":"9f23dfc83471b047","toSide":"right","label":"Konvertierung"},
		{"id":"14576f5386b65e66","fromNode":"9f23dfc83471b047","fromSide":"left","toNode":"27e92932ca31df99","toSide":"right"},
		{"id":"3171dbc28fe0d94e","fromNode":"9f23dfc83471b047","fromSide":"left","toNode":"b4a6561ec3a431ec","toSide":"right"},
		{"id":"852837dfb914de1b","fromNode":"9f23dfc83471b047","fromSide":"left","toNode":"f49c1f65adc0697a","toSide":"right"},
		{"id":"213b19c01131a563","fromNode":"9f23dfc83471b047","fromSide":"bottom","toNode":"8ca9c4c04d91c66c","toSide":"top"},
		{"id":"c7fc9cc51f29b811","fromNode":"9f23dfc83471b047","fromSide":"left","toNode":"caf76fa24b94673d","toSide":"right"},
		{"id":"3d87a9bf31d700d9","fromNode":"f3783658e54ad5cf","fromSide":"right","toNode":"c1367ec4e057f66c","toSide":"left"},
		{"id":"b216785b2b6adad4","fromNode":"1e0a3537f286cf86","fromSide":"bottom","toNode":"31bcc49832ac66d6","toSide":"top","label":"Datenstrukturen für Punktwolken"},
		{"id":"dff3bc3470866bfc","fromNode":"31bcc49832ac66d6","fromSide":"bottom","toNode":"e2ad118f19398d32","toSide":"top","label":"Grids / Gitterdaten"},
		{"id":"25960ab64da0a3cd","fromNode":"e2ad118f19398d32","fromSide":"left","toNode":"1f3e82484c46f0e1","toSide":"right"},
		{"id":"c637366d5b29fcd3","fromNode":"31bcc49832ac66d6","fromSide":"bottom","toNode":"be02a1cb91cf80a0","toSide":"top","label":"Quad- und Octrees"},
		{"id":"6aa93bf300844d2e","fromNode":"be02a1cb91cf80a0","fromSide":"bottom","toNode":"cec28a95e0ab8f4d","toSide":"top","label":"Rastermethode"},
		{"id":"d95faedaa9f9f5e3","fromNode":"cec28a95e0ab8f4d","fromSide":"left","toNode":"773a1b24ad56d56a","toSide":"right"},
		{"id":"e473cfb0684f7abb","fromNode":"773a1b24ad56d56a","fromSide":"bottom","toNode":"f0af1faf88533472","toSide":"top"},
		{"id":"23662a5ab1438a98","fromNode":"be02a1cb91cf80a0","fromSide":"bottom","toNode":"b8d0159f3a3a29e9","toSide":"top","label":"Übersicht"},
		{"id":"936cea977eacfc8b","fromNode":"b8d0159f3a3a29e9","fromSide":"right","toNode":"f6446f2b78d296ee","toSide":"left","label":"Beispiel"},
		{"id":"7981303497770124","fromNode":"f6446f2b78d296ee","fromSide":"bottom","toNode":"c5841782e70c8142","toSide":"top","label":"Quadtree und zugehörige\n Partition"},
		{"id":"5c3f781e9bdd3615","fromNode":"c5841782e70c8142","fromSide":"top","toNode":"f6446f2b78d296ee","toSide":"bottom"},
		{"id":"14bb535e89edcae8","fromNode":"b8d0159f3a3a29e9","fromSide":"bottom","toNode":"949922df5f113365","toSide":"top","label":"Terminologie"},
		{"id":"a7eb48aa85072930","fromNode":"949922df5f113365","fromSide":"right","toNode":"34bdd986fbe3a288","toSide":"left"},
		{"id":"d36ad102a812dcde","fromNode":"be02a1cb91cf80a0","fromSide":"bottom","toNode":"31e5610057b171c2","toSide":"top","label":"Definition"},
		{"id":"95b7063d6e2ae046","fromNode":"31e5610057b171c2","fromSide":"right","toNode":"238608a5c795c58a","toSide":"left"},
		{"id":"1dd03fe0b0fba405","fromNode":"b8d0159f3a3a29e9","fromSide":"bottom","toNode":"5c51599d769f7ed6","toSide":"top","label":"Konzept"},
		{"id":"2bbb3549d3d7f721","fromNode":"5c51599d769f7ed6","fromSide":"bottom","toNode":"a587d4ecc82657aa","toSide":"top","label":"Konstruktion"},
		{"id":"b6396703ea2d0b0a","fromNode":"a587d4ecc82657aa","fromSide":"right","toNode":"8fa0e482247f86c8","toSide":"left"},
		{"id":"159a48820ed916b5","fromNode":"8fa0e482247f86c8","fromSide":"bottom","toNode":"6464d2be05e2010c","toSide":"top"},
		{"id":"f78b8873fe5db6da","fromNode":"6464d2be05e2010c","fromSide":"right","toNode":"d2637eae0e3ddd93","toSide":"left"},
		{"id":"6139fd3ab764ed0b","fromNode":"a587d4ecc82657aa","fromSide":"bottom","toNode":"9120928cbc2ba29f","toSide":"top"},
		{"id":"a2cffdf301896dc3","fromNode":"9120928cbc2ba29f","fromSide":"bottom","toNode":"0d12a39833ec9001","toSide":"top"},
		{"id":"02bb44eb8c9e85fa","fromNode":"9120928cbc2ba29f","fromSide":"bottom","toNode":"5ba47ca4622b9870","toSide":"top"},
		{"id":"bb5db016db66b160","fromNode":"5c51599d769f7ed6","fromSide":"left","toNode":"9d5866ad7cf24abc","toSide":"right","label":"Suchen"},
		{"id":"a764c2760f01768e","fromNode":"9d5866ad7cf24abc","fromSide":"bottom","toNode":"547c1f545224f25a","toSide":"top","label":"Grundlagen"},
		{"id":"a6191ed5c6d6f578","fromNode":"547c1f545224f25a","fromSide":"bottom","toNode":"a54ff8310508e391","toSide":"top","label":"Beispiel"},
		{"id":"67551cfd24720117","fromNode":"a54ff8310508e391","fromSide":"right","toNode":"3ddfed4322825baf","toSide":"left"},
		{"id":"1a4e5b4afa5be5ee","fromNode":"a54ff8310508e391","fromSide":"bottom","toNode":"7b35beab4d8f3cd1","toSide":"top","label":"Implementierung"},
		{"id":"ef3d1e43d50d076e","fromNode":"7b35beab4d8f3cd1","fromSide":"bottom","toNode":"a8a8f20833bd9ec5","toSide":"top"},
		{"id":"108c1167bad5831c","fromNode":"7b35beab4d8f3cd1","fromSide":"bottom","toNode":"f9c08d1f149d27a7","toSide":"top"},
		{"id":"c7a2cfb6142fdedf","fromNode":"be02a1cb91cf80a0","fromSide":"right","toNode":"2bdc3140a76981c5","toSide":"left","label":"Vor- und Nachteile"},
		{"id":"93c09078494fbcff","fromNode":"31bcc49832ac66d6","fromSide":"bottom","toNode":"ad7efc39ad539cdb","toSide":"top","label":"kd-Trees"},
		{"id":"066449f9c9f87193","fromNode":"ad7efc39ad539cdb","fromSide":"right","toNode":"7347d4f5352c8b96","toSide":"left"},
		{"id":"311751a1ec71a5b0","fromNode":"ad7efc39ad539cdb","fromSide":"bottom","toNode":"33ae4e12206fa96e","toSide":"top","label":"Eigenschaften"},
		{"id":"17906f9788f74636","fromNode":"33ae4e12206fa96e","fromSide":"bottom","toNode":"8d33799a9850cbc1","toSide":"top","label":"Laufzeit"},
		{"id":"6578f305fa0730b0","fromNode":"8d33799a9850cbc1","fromSide":"left","toNode":"9ef68854272582d1","toSide":"right","label":"Partitionierung\nam Median"},
		{"id":"1abbc35f6c08a1f7","fromNode":"9ef68854272582d1","fromSide":"left","toNode":"0eaeb25e34173456","toSide":"right","label":"Beispiel"},
		{"id":"0460959f93b9fe7b","fromNode":"9ef68854272582d1","fromSide":"left","toNode":"73b7f78fbdd835f4","toSide":"right","label":"Implementierung\n(X und Y vorsortiert)"},
		{"id":"f2b4449804cc7a91","fromNode":"9ef68854272582d1","fromSide":"bottom","toNode":"31f72d8aa13e5f16","toSide":"top","label":"Laufzeit"},
		{"id":"fd3a1beb6385a137","fromNode":"33ae4e12206fa96e","fromSide":"right","toNode":"554ab7a2b99f0163","toSide":"left","label":"Suchen"},
		{"id":"6c788f69102c7ff3","fromNode":"554ab7a2b99f0163","fromSide":"right","toNode":"abda93ad968f7b1c","toSide":"left","label":"Implementierung"},
		{"id":"882d0840722d2e37","fromNode":"554ab7a2b99f0163","fromSide":"right","toNode":"9e2f5b27eda18778","toSide":"left","label":"Beispiel"},
		{"id":"c8eea2a32c13ba15","fromNode":"554ab7a2b99f0163","fromSide":"bottom","toNode":"8c5a3986a67c2917","toSide":"top","label":"Laufzeit"},
		{"id":"d997d818658ddcdd","fromNode":"ad7efc39ad539cdb","fromSide":"left","toNode":"2ee4ca8205145b27","toSide":"right","label":"Höhere Dimensionen"},
		{"id":"1564889efc354bf0","fromNode":"31bcc49832ac66d6","fromSide":"bottom","toNode":"050c4de8d10c5146","toSide":"top","label":"bsp-Trees"},
		{"id":"cb4b077d400caf5e","fromNode":"050c4de8d10c5146","fromSide":"right","toNode":"d5930c4a3551ef90","toSide":"left","label":"Beispiel"},
		{"id":"62c8c86b6e78cb0e","fromNode":"050c4de8d10c5146","fromSide":"bottom","toNode":"f1bd9efc16b07d1a","toSide":"top"},
		{"id":"92ddbe766fff4194","fromNode":"f1bd9efc16b07d1a","fromSide":"right","toNode":"c8fc22f437148fa5","toSide":"left","label":"Auswahl\nder Hyperplanes"},
		{"id":"ca63cb4f1ea5743b","fromNode":"c8fc22f437148fa5","fromSide":"right","toNode":"e755bc2433b3a968","toSide":"left","label":"PCA"},
		{"id":"1edacb42c107b157","fromNode":"f1bd9efc16b07d1a","fromSide":"bottom","toNode":"56246061a3730a5d","toSide":"top"},
		{"id":"1f6d905613bbace7","fromNode":"f1bd9efc16b07d1a","fromSide":"bottom","toNode":"9fa47023a5a2c425","toSide":"top","label":"Struktur & Eigenschaften"},
		{"id":"dfc484800ae4be6c","fromNode":"1e0a3537f286cf86","fromSide":"top","toNode":"5179646cf221f995","toSide":"left","label":"Mesh Datenstrukturen"},
		{"id":"42a9f95e0f5aae4f","fromNode":"5179646cf221f995","fromSide":"top","toNode":"1aaaa10a45778592","toSide":"bottom","label":"Mesh Grundlagen"},
		{"id":"44013057d7abf133","fromNode":"5179646cf221f995","fromSide":"bottom","toNode":"1d6fd132361ce06c","toSide":"top","label":"Half-edges"},
		{"id":"76eb8e00a4d2029e","fromNode":"1aaaa10a45778592","fromSide":"top","toNode":"048d42d162cb2530","toSide":"bottom","label":"Beispiel"},
		{"id":"4ebc8387f06df2c4","fromNode":"1aaaa10a45778592","fromSide":"top","toNode":"68a90224c97e0f9c","toSide":"bottom","label":"Visualisierung\nMeshmodell"},
		{"id":"7579332a2b33ca83","fromNode":"1aaaa10a45778592","fromSide":"left","toNode":"a5e3f3878b757662","toSide":"right","label":"Meshbasierte Verarbeitungsziele"},
		{"id":"9b4c892ffba91815","fromNode":"a5e3f3878b757662","fromSide":"left","toNode":"e57eb40d774d3446","toSide":"right","label":"Re-Meshing"},
		{"id":"b0426d1ac28bded2","fromNode":"a5e3f3878b757662","fromSide":"left","toNode":"568e10056b6c794e","toSide":"right","label":"Dezimierung"},
		{"id":"97cb95cd4f7d35fa","fromNode":"a5e3f3878b757662","fromSide":"left","toNode":"0c6901d0e6e08711","toSide":"right","label":"Glättung"},
		{"id":"75c3f08c05748077","fromNode":"a5e3f3878b757662","fromSide":"left","toNode":"b318e7b7024fa144","toSide":"right","label":"Fairing"},
		{"id":"40733a7ccc946d8e","fromNode":"1aaaa10a45778592","fromSide":"left","toNode":"4a4f4a565950d22e","toSide":"top","label":"Mesh Typen"},
		{"id":"77d2b79f1149859b","fromNode":"4a4f4a565950d22e","fromSide":"left","toNode":"44fecb383aa48720","toSide":"top","label":"Reguläre Meshes"},
		{"id":"593172e6aef58f99","fromNode":"4a4f4a565950d22e","fromSide":"bottom","toNode":"5eafbfa1f3eb0ebb","toSide":"top","label":"Irreguläre Meshes"},
		{"id":"a2e486ed5c2188cf","fromNode":"1aaaa10a45778592","fromSide":"right","toNode":"6696f18c1f97c6bb","toSide":"left","label":"Lokale Nachbarschaft (Definitionen)"},
		{"id":"979d63c33293c15e","fromNode":"6696f18c1f97c6bb","fromSide":"right","toNode":"3669591720c2d166","toSide":"left","label":"1-ring"},
		{"id":"d17d5647d736811a","fromNode":"6696f18c1f97c6bb","fromSide":"right","toNode":"7aec9accab92825b","toSide":"left","label":"1-fan"},
		{"id":"c103d02a93f3010f","fromNode":"6696f18c1f97c6bb","fromSide":"right","toNode":"865a741a2fafad25","toSide":"left","label":"1-star"},
		{"id":"7e0748b65666f7ad","fromNode":"1aaaa10a45778592","fromSide":"right","toNode":"70a9ec3e1a3cb70e","toSide":"left","label":"Topologie"},
		{"id":"e15b7565faf4b2f6","fromNode":"0d60a728235ac6f0","fromSide":"bottom","toNode":"85a42a08bc7753a3","toSide":"top"},
		{"id":"646f7e1fc958b947","fromNode":"0d60a728235ac6f0","fromSide":"bottom","toNode":"ea3647ac99f5d00e","toSide":"top"},
		{"id":"1a99d7d67ea39dc7","fromNode":"0d60a728235ac6f0","fromSide":"bottom","toNode":"48ef4bcfa044a6d9","toSide":"top"},
		{"id":"83aeebfecb503562","fromNode":"f51570c0241b99db","fromSide":"right","toNode":"6f5b37cbe394e1f8","toSide":"left","label":"Beispiel: \nTopologie von 3d Meshes"},
		{"id":"4fb310462e1db668","fromNode":"f51570c0241b99db","fromSide":"right","toNode":"24c84acaf5002970","toSide":"left","label":"Beispiel: \nTopologie von 3d Meshes"},
		{"id":"23397b0a9f760ef5","fromNode":"0d60a728235ac6f0","fromSide":"right","toNode":"f51570c0241b99db","toSide":"left"},
		{"id":"83f70db794eecac2","fromNode":"5f30b1e82d3a6215","fromSide":"top","toNode":"dce1402e12d94576","toSide":"bottom","label":"Topologische Operationen"},
		{"id":"a7015b236c36db85","fromNode":"dce1402e12d94576","fromSide":"top","toNode":"0e822393eb8c1c5d","toSide":"bottom","label":"Kopplung von\nGeometrie\nund\nTopologie"},
		{"id":"91c4cff11e76163a","fromNode":"5f30b1e82d3a6215","fromSide":"top","toNode":"b003ec717fe928a7","toSide":"left","label":"Geometrische Opertoren"},
		{"id":"2a0749a619dcf1f1","fromNode":"5f30b1e82d3a6215","fromSide":"top","toNode":"7f907682360d9161","toSide":"left","label":"Kombinatorische Operatoren"},
		{"id":"fd83840e6e9e7118","fromNode":"1d6fd132361ce06c","fromSide":"bottom","toNode":"7115df57d4c0b7a8","toSide":"top","label":"Half-edge Datenstruktur"},
		{"id":"b8f7850f2d955889","fromNode":"7115df57d4c0b7a8","fromSide":"bottom","toNode":"f4ab1a187ef9d3fa","toSide":"top"},
		{"id":"32faf9d1de824435","fromNode":"70a9ec3e1a3cb70e","fromSide":"top","toNode":"5f30b1e82d3a6215","toSide":"bottom"},
		{"id":"edeff066f59b5e19","fromNode":"70a9ec3e1a3cb70e","fromSide":"right","toNode":"0d60a728235ac6f0","toSide":"left","label":"Topologie"},
		{"id":"f9113e4c6d7c1d7b","fromNode":"f4ab1a187ef9d3fa","fromSide":"bottom","toNode":"2ba4532d230730e4","toSide":"left"},
		{"id":"c158164dd863faf8","fromNode":"f4ab1a187ef9d3fa","fromSide":"bottom","toNode":"a788af457eb96d33","toSide":"left"},
		{"id":"4e10aa4576c1c00e","fromNode":"f4ab1a187ef9d3fa","fromSide":"bottom","toNode":"b862612d4093606f","toSide":"left"},
		{"id":"7b9be15176d0a8fb","fromNode":"7115df57d4c0b7a8","fromSide":"right","toNode":"05c49011b9f9d76f","toSide":"left","label":"(für Meshes mit Rand)"},
		{"id":"902129472c97cc46","fromNode":"05c49011b9f9d76f","fromSide":"top","toNode":"42cd539c6f2a6f5f","toSide":"bottom","label":"boundary half-edge"},
		{"id":"f694c60586259e73","fromNode":"05c49011b9f9d76f","fromSide":"top","toNode":"1a59a0bacbb52925","toSide":"bottom","label":"right-hinged (rot)"},
		{"id":"d299065da5b0388e","fromNode":"05c49011b9f9d76f","fromSide":"bottom","toNode":"652fbcc946c9b731","toSide":"top","label":"Beispieloperation"},
		{"id":"4a00d209c3e4ea08","fromNode":"05c49011b9f9d76f","fromSide":"right","toNode":"cd4831834fae5926","toSide":"left","label":"Directed Edge Datenstruktur"},
		{"id":"1ed8d91a83e1c73f","fromNode":"cd4831834fae5926","fromSide":"right","toNode":"fadebf8178397898","toSide":"left"},
		{"id":"30172b87a55e1e1d","fromNode":"cd4831834fae5926","fromSide":"right","toNode":"b62e964d4070643a","toSide":"left"},
		{"id":"a452e49048d0beb5","fromNode":"cd4831834fae5926","fromSide":"right","toNode":"4542caddb8d01d99","toSide":"left"},
		{"id":"ffa2cc7d247d7b53","fromNode":"cd4831834fae5926","fromSide":"bottom","toNode":"a0ed8195263dd632","toSide":"top","label":"Speicherverbrauch"},
		{"id":"e8fe7235b5c23f91","fromNode":"1e0a3537f286cf86","fromSide":"bottom","toNode":"0160187acbc4f3c9","toSide":"left","label":"Fragen"},
		{"id":"14408f3fb1226a28","fromNode":"0160187acbc4f3c9","fromSide":"bottom","toNode":"c197011daacb279f","toSide":"top"},
		{"id":"36ed2ea972d4716a","fromNode":"0160187acbc4f3c9","fromSide":"bottom","toNode":"3f2ee2ad12e8b06d","toSide":"top"},
		{"id":"125bfb4571bb6637","fromNode":"0160187acbc4f3c9","fromSide":"right","toNode":"5703a6bed958da7a","toSide":"left"},
		{"id":"6e1e78153e069229","fromNode":"0160187acbc4f3c9","fromSide":"top","toNode":"facc3e5ac7fc1172","toSide":"bottom"},
		{"id":"7aa91dec089ca303","fromNode":"0160187acbc4f3c9","fromSide":"bottom","toNode":"fe7e748d626e2958","toSide":"top"},
		{"id":"06e348cbe349b27d","fromNode":"0160187acbc4f3c9","fromSide":"top","toNode":"473437eae3e766aa","toSide":"bottom"},
		{"id":"ed88733e3a6c31fd","fromNode":"0160187acbc4f3c9","fromSide":"top","toNode":"d6509a47307c7d9c","toSide":"bottom"}
	]
}